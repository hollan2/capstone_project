{
  "version": 3,
  "sources": ["../../konva/lib/Global.js", "../../konva/lib/Util.js", "../../konva/lib/Validators.js", "../../konva/lib/Factory.js", "../../konva/lib/Context.js", "../../konva/lib/Canvas.js", "../../konva/lib/DragAndDrop.js", "../../konva/lib/Node.js", "../../konva/lib/Container.js", "../../konva/lib/PointerEvents.js", "../../konva/lib/Stage.js", "../../konva/lib/Shape.js", "../../konva/lib/Layer.js", "../../konva/lib/FastLayer.js", "../../konva/lib/Group.js", "../../konva/lib/Animation.js", "../../konva/lib/Tween.js", "../../konva/lib/_CoreInternals.js", "../../konva/lib/shapes/Arc.js", "../../konva/lib/shapes/Line.js", "../../konva/lib/shapes/Path.js", "../../konva/lib/shapes/Arrow.js", "../../konva/lib/shapes/Circle.js", "../../konva/lib/shapes/Ellipse.js", "../../konva/lib/shapes/Image.js", "../../konva/lib/shapes/Label.js", "../../konva/lib/shapes/Rect.js", "../../konva/lib/shapes/RegularPolygon.js", "../../konva/lib/shapes/Ring.js", "../../konva/lib/shapes/Sprite.js", "../../konva/lib/shapes/Star.js", "../../konva/lib/shapes/Text.js", "../../konva/lib/shapes/TextPath.js", "../../konva/lib/shapes/Transformer.js", "../../konva/lib/shapes/Wedge.js", "../../konva/lib/filters/Blur.js", "../../konva/lib/filters/Brighten.js", "../../konva/lib/filters/Contrast.js", "../../konva/lib/filters/Emboss.js", "../../konva/lib/filters/Enhance.js", "../../konva/lib/filters/Grayscale.js", "../../konva/lib/filters/HSL.js", "../../konva/lib/filters/HSV.js", "../../konva/lib/filters/Invert.js", "../../konva/lib/filters/Kaleidoscope.js", "../../konva/lib/filters/Mask.js", "../../konva/lib/filters/Noise.js", "../../konva/lib/filters/Pixelate.js", "../../konva/lib/filters/Posterize.js", "../../konva/lib/filters/RGB.js", "../../konva/lib/filters/RGBA.js", "../../konva/lib/filters/Sepia.js", "../../konva/lib/filters/Solarize.js", "../../konva/lib/filters/Threshold.js", "../../konva/lib/_FullInternals.js", "../../konva/lib/index.js"],
  "sourcesContent": ["var PI_OVER_180 = Math.PI / 180;\nfunction detectBrowser() {\n    return (typeof window !== 'undefined' &&\n        ({}.toString.call(window) === '[object Window]' ||\n            {}.toString.call(window) === '[object global]'));\n}\nexport const glob = typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined'\n            ? self\n            : {};\nexport const Konva = {\n    _global: glob,\n    version: '8.4.2',\n    isBrowser: detectBrowser(),\n    isUnminified: /param/.test(function (param) { }.toString()),\n    dblClickWindow: 400,\n    getAngle(angle) {\n        return Konva.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    enableTrace: false,\n    pointerEventsEnabled: true,\n    autoDrawEnabled: true,\n    hitOnDragEnabled: false,\n    capturePointerEventsEnabled: false,\n    _mouseListenClick: false,\n    _touchListenClick: false,\n    _pointerListenClick: false,\n    _mouseInDblClickWindow: false,\n    _touchInDblClickWindow: false,\n    _pointerInDblClickWindow: false,\n    _mouseDblClickPointerId: null,\n    _touchDblClickPointerId: null,\n    _pointerDblClickPointerId: null,\n    pixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1,\n    dragDistance: 3,\n    angleDeg: true,\n    showWarnings: true,\n    dragButtons: [0, 1],\n    isDragging() {\n        return Konva['DD'].isDragging;\n    },\n    isDragReady() {\n        return !!Konva['DD'].node;\n    },\n    releaseCanvasOnDestroy: true,\n    document: glob.document,\n    _injectGlobal(Konva) {\n        glob.Konva = Konva;\n    },\n};\nexport const _registerNode = (NodeClass) => {\n    Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\nKonva._injectGlobal(Konva);\n", "import { Konva } from './Global.js';\nexport class Transform {\n    constructor(m = [1, 0, 0, 1, 0, 0]) {\n        this.dirty = false;\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n    }\n    reset() {\n        this.m[0] = 1;\n        this.m[1] = 0;\n        this.m[2] = 0;\n        this.m[3] = 1;\n        this.m[4] = 0;\n        this.m[5] = 0;\n    }\n    copy() {\n        return new Transform(this.m);\n    }\n    copyInto(tr) {\n        tr.m[0] = this.m[0];\n        tr.m[1] = this.m[1];\n        tr.m[2] = this.m[2];\n        tr.m[3] = this.m[3];\n        tr.m[4] = this.m[4];\n        tr.m[5] = this.m[5];\n    }\n    point(point) {\n        var m = this.m;\n        return {\n            x: m[0] * point.x + m[2] * point.y + m[4],\n            y: m[1] * point.x + m[3] * point.y + m[5],\n        };\n    }\n    translate(x, y) {\n        this.m[4] += this.m[0] * x + this.m[2] * y;\n        this.m[5] += this.m[1] * x + this.m[3] * y;\n        return this;\n    }\n    scale(sx, sy) {\n        this.m[0] *= sx;\n        this.m[1] *= sx;\n        this.m[2] *= sy;\n        this.m[3] *= sy;\n        return this;\n    }\n    rotate(rad) {\n        var c = Math.cos(rad);\n        var s = Math.sin(rad);\n        var m11 = this.m[0] * c + this.m[2] * s;\n        var m12 = this.m[1] * c + this.m[3] * s;\n        var m21 = this.m[0] * -s + this.m[2] * c;\n        var m22 = this.m[1] * -s + this.m[3] * c;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    getTranslation() {\n        return {\n            x: this.m[4],\n            y: this.m[5],\n        };\n    }\n    skew(sx, sy) {\n        var m11 = this.m[0] + this.m[2] * sy;\n        var m12 = this.m[1] + this.m[3] * sy;\n        var m21 = this.m[2] + this.m[0] * sx;\n        var m22 = this.m[3] + this.m[1] * sx;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    multiply(matrix) {\n        var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n        var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n        var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n        var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n        var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n        var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        this.m[4] = dx;\n        this.m[5] = dy;\n        return this;\n    }\n    invert() {\n        var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n        var m0 = this.m[3] * d;\n        var m1 = -this.m[1] * d;\n        var m2 = -this.m[2] * d;\n        var m3 = this.m[0] * d;\n        var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n        var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n        this.m[0] = m0;\n        this.m[1] = m1;\n        this.m[2] = m2;\n        this.m[3] = m3;\n        this.m[4] = m4;\n        this.m[5] = m5;\n        return this;\n    }\n    getMatrix() {\n        return this.m;\n    }\n    decompose() {\n        var a = this.m[0];\n        var b = this.m[1];\n        var c = this.m[2];\n        var d = this.m[3];\n        var e = this.m[4];\n        var f = this.m[5];\n        var delta = a * d - b * c;\n        let result = {\n            x: e,\n            y: f,\n            rotation: 0,\n            scaleX: 0,\n            scaleY: 0,\n            skewX: 0,\n            skewY: 0,\n        };\n        if (a != 0 || b != 0) {\n            var r = Math.sqrt(a * a + b * b);\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n            result.scaleX = r;\n            result.scaleY = delta / r;\n            result.skewX = (a * c + b * d) / delta;\n            result.skewY = 0;\n        }\n        else if (c != 0 || d != 0) {\n            var s = Math.sqrt(c * c + d * d);\n            result.rotation =\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n            result.scaleX = delta / s;\n            result.scaleY = s;\n            result.skewX = 0;\n            result.skewY = (a * c + b * d) / delta;\n        }\n        else {\n        }\n        result.rotation = Util._getRotation(result.rotation);\n        return result;\n    }\n}\nvar OBJECT_ARRAY = '[object Array]', OBJECT_NUMBER = '[object Number]', OBJECT_STRING = '[object String]', OBJECT_BOOLEAN = '[object Boolean]', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = '#', EMPTY_STRING = '', ZERO = '0', KONVA_WARNING = 'Konva warning: ', KONVA_ERROR = 'Konva error: ', RGB_PAREN = 'rgb(', COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5],\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/, animQueue = [];\nconst req = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame) ||\n    function (f) {\n        setTimeout(f, 60);\n    };\nexport const Util = {\n    _isElement(obj) {\n        return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isPlainObject(obj) {\n        return !!obj && obj.constructor === Object;\n    },\n    _isArray(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber(obj) {\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\n            !isNaN(obj) &&\n            isFinite(obj));\n    },\n    _isString(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    _isBoolean(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n    },\n    isObject(val) {\n        return val instanceof Object;\n    },\n    isValidSelector(selector) {\n        if (typeof selector !== 'string') {\n            return false;\n        }\n        var firstChar = selector[0];\n        return (firstChar === '#' ||\n            firstChar === '.' ||\n            firstChar === firstChar.toUpperCase());\n    },\n    _sign(number) {\n        if (number === 0) {\n            return 1;\n        }\n        if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    },\n    requestAnimFrame(callback) {\n        animQueue.push(callback);\n        if (animQueue.length === 1) {\n            req(function () {\n                const queue = animQueue;\n                animQueue = [];\n                queue.forEach(function (cb) {\n                    cb();\n                });\n            });\n        }\n    },\n    createCanvasElement() {\n        var canvas = document.createElement('canvas');\n        try {\n            canvas.style = canvas.style || {};\n        }\n        catch (e) { }\n        return canvas;\n    },\n    createImageElement() {\n        return document.createElement('img');\n    },\n    _isInDocument(el) {\n        while ((el = el.parentNode)) {\n            if (el == document) {\n                return true;\n            }\n        }\n        return false;\n    },\n    _urlToImage(url, callback) {\n        var imageObj = Util.createImageElement();\n        imageObj.onload = function () {\n            callback(imageObj);\n        };\n        imageObj.src = url;\n    },\n    _rgbToHex(r, g, b) {\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb(hex) {\n        hex = hex.replace(HASH, EMPTY_STRING);\n        var bigint = parseInt(hex, 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    },\n    getRandomColor() {\n        var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n        while (randColor.length < 6) {\n            randColor = ZERO + randColor;\n        }\n        return HASH + randColor;\n    },\n    getRGB(color) {\n        var rgb;\n        if (color in COLORS) {\n            rgb = COLORS[color];\n            return {\n                r: rgb[0],\n                g: rgb[1],\n                b: rgb[2],\n            };\n        }\n        else if (color[0] === HASH) {\n            return this._hexToRgb(color.substring(1));\n        }\n        else if (color.substr(0, 4) === RGB_PAREN) {\n            rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n            return {\n                r: parseInt(rgb[1], 10),\n                g: parseInt(rgb[2], 10),\n                b: parseInt(rgb[3], 10),\n            };\n        }\n        else {\n            return {\n                r: 0,\n                g: 0,\n                b: 0,\n            };\n        }\n    },\n    colorToRGBA(str) {\n        str = str || 'black';\n        return (Util._namedColorToRBA(str) ||\n            Util._hex3ColorToRGBA(str) ||\n            Util._hex4ColorToRGBA(str) ||\n            Util._hex6ColorToRGBA(str) ||\n            Util._hex8ColorToRGBA(str) ||\n            Util._rgbColorToRGBA(str) ||\n            Util._rgbaColorToRGBA(str) ||\n            Util._hslColorToRGBA(str));\n    },\n    _namedColorToRBA(str) {\n        var c = COLORS[str.toLowerCase()];\n        if (!c) {\n            return null;\n        }\n        return {\n            r: c[0],\n            g: c[1],\n            b: c[2],\n            a: 1,\n        };\n    },\n    _rgbColorToRGBA(str) {\n        if (str.indexOf('rgb(') === 0) {\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map(Number);\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: 1,\n            };\n        }\n    },\n    _rgbaColorToRGBA(str) {\n        if (str.indexOf('rgba(') === 0) {\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map((n, index) => {\n                if (n.slice(-1) === '%') {\n                    return index === 3 ? parseInt(n) / 100 : (parseInt(n) / 100) * 255;\n                }\n                return Number(n);\n            });\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: parts[3],\n            };\n        }\n    },\n    _hex8ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 9) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: parseInt(str.slice(7, 9), 16) / 0xff,\n            };\n        }\n    },\n    _hex6ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 7) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: 1,\n            };\n        }\n    },\n    _hex4ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 5) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: parseInt(str[4] + str[4], 16) / 0xff,\n            };\n        }\n    },\n    _hex3ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 4) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: 1,\n            };\n        }\n    },\n    _hslColorToRGBA(str) {\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n            const h = Number(hsl[0]) / 360;\n            const s = Number(hsl[1]) / 100;\n            const l = Number(hsl[2]) / 100;\n            let t2;\n            let t3;\n            let val;\n            if (s === 0) {\n                val = l * 255;\n                return {\n                    r: Math.round(val),\n                    g: Math.round(val),\n                    b: Math.round(val),\n                    a: 1,\n                };\n            }\n            if (l < 0.5) {\n                t2 = l * (1 + s);\n            }\n            else {\n                t2 = l + s - l * s;\n            }\n            const t1 = 2 * l - t2;\n            const rgb = [0, 0, 0];\n            for (let i = 0; i < 3; i++) {\n                t3 = h + (1 / 3) * -(i - 1);\n                if (t3 < 0) {\n                    t3++;\n                }\n                if (t3 > 1) {\n                    t3--;\n                }\n                if (6 * t3 < 1) {\n                    val = t1 + (t2 - t1) * 6 * t3;\n                }\n                else if (2 * t3 < 1) {\n                    val = t2;\n                }\n                else if (3 * t3 < 2) {\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n                }\n                else {\n                    val = t1;\n                }\n                rgb[i] = val * 255;\n            }\n            return {\n                r: Math.round(rgb[0]),\n                g: Math.round(rgb[1]),\n                b: Math.round(rgb[2]),\n                a: 1,\n            };\n        }\n    },\n    haveIntersection(r1, r2) {\n        return !(r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y);\n    },\n    cloneObject(obj) {\n        var retObj = {};\n        for (var key in obj) {\n            if (this._isPlainObject(obj[key])) {\n                retObj[key] = this.cloneObject(obj[key]);\n            }\n            else if (this._isArray(obj[key])) {\n                retObj[key] = this.cloneArray(obj[key]);\n            }\n            else {\n                retObj[key] = obj[key];\n            }\n        }\n        return retObj;\n    },\n    cloneArray(arr) {\n        return arr.slice(0);\n    },\n    degToRad(deg) {\n        return deg * PI_OVER_DEG180;\n    },\n    radToDeg(rad) {\n        return rad * DEG180_OVER_PI;\n    },\n    _degToRad(deg) {\n        Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n        return Util.degToRad(deg);\n    },\n    _radToDeg(rad) {\n        Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n        return Util.radToDeg(rad);\n    },\n    _getRotation(radians) {\n        return Konva.angleDeg ? Util.radToDeg(radians) : radians;\n    },\n    _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw(str) {\n        throw new Error(KONVA_ERROR + str);\n    },\n    error(str) {\n        console.error(KONVA_ERROR + str);\n    },\n    warn(str) {\n        if (!Konva.showWarnings) {\n            return;\n        }\n        console.warn(KONVA_WARNING + str);\n    },\n    each(obj, func) {\n        for (var key in obj) {\n            func(key, obj[key]);\n        }\n    },\n    _inRange(val, left, right) {\n        return left <= val && val < right;\n    },\n    _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n        var x, y, dist;\n        var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n        if (pd2 == 0) {\n            x = x1;\n            y = y1;\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n        }\n        else {\n            var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n            if (u < 0) {\n                x = x1;\n                y = y1;\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n            }\n            else if (u > 1.0) {\n                x = x2;\n                y = y2;\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n            }\n            else {\n                x = x1 + u * (x2 - x1);\n                y = y1 + u * (y2 - y1);\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n            }\n        }\n        return [x, y, dist];\n    },\n    _getProjectionToLine(pt, line, isClosed) {\n        var pc = Util.cloneObject(pt);\n        var dist = Number.MAX_VALUE;\n        line.forEach(function (p1, i) {\n            if (!isClosed && i === line.length - 1) {\n                return;\n            }\n            var p2 = line[(i + 1) % line.length];\n            var proj = Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n            var px = proj[0], py = proj[1], pdist = proj[2];\n            if (pdist < dist) {\n                pc.x = px;\n                pc.y = py;\n                dist = pdist;\n            }\n        });\n        return pc;\n    },\n    _prepareArrayForTween(startArray, endArray, isClosed) {\n        var n, start = [], end = [];\n        if (startArray.length > endArray.length) {\n            var temp = endArray;\n            endArray = startArray;\n            startArray = temp;\n        }\n        for (n = 0; n < startArray.length; n += 2) {\n            start.push({\n                x: startArray[n],\n                y: startArray[n + 1],\n            });\n        }\n        for (n = 0; n < endArray.length; n += 2) {\n            end.push({\n                x: endArray[n],\n                y: endArray[n + 1],\n            });\n        }\n        var newStart = [];\n        end.forEach(function (point) {\n            var pr = Util._getProjectionToLine(point, start, isClosed);\n            newStart.push(pr.x);\n            newStart.push(pr.y);\n        });\n        return newStart;\n    },\n    _prepareToStringify(obj) {\n        var desc;\n        obj.visitedByCircularReferenceRemoval = true;\n        for (var key in obj) {\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n                continue;\n            }\n            desc = Object.getOwnPropertyDescriptor(obj, key);\n            if (obj[key].visitedByCircularReferenceRemoval ||\n                Util._isElement(obj[key])) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n            else if (Util._prepareToStringify(obj[key]) === null) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        delete obj.visitedByCircularReferenceRemoval;\n        return obj;\n    },\n    _assign(target, source) {\n        for (var key in source) {\n            target[key] = source[key];\n        }\n        return target;\n    },\n    _getFirstPointerId(evt) {\n        if (!evt.touches) {\n            return evt.pointerId || 999;\n        }\n        else {\n            return evt.changedTouches[0].identifier;\n        }\n    },\n    releaseCanvas(...canvases) {\n        if (!Konva.releaseCanvasOnDestroy)\n            return;\n        canvases.forEach(c => {\n            c.width = 0;\n            c.height = 0;\n        });\n    },\n    drawRoundedRectPath(context, width, height, cornerRadius) {\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.moveTo(topLeft, 0);\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n    }\n};\n", "import { Konva } from './Global.js';\nimport { Util } from './Util.js';\nfunction _formatValue(val) {\n    if (Util._isString(val)) {\n        return '\"' + val + '\"';\n    }\n    if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n    }\n    if (Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nexport function RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nexport function alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nexport function getNumberValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isNumber(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number.');\n            }\n            return val;\n        };\n    }\n}\nexport function getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            let isNumber = Util._isNumber(val);\n            let isValidArray = Util._isArray(val) && val.length == noOfElements;\n            if (!isNumber && !isValidArray) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or Array<number>(' +\n                    noOfElements +\n                    ')');\n            }\n            return val;\n        };\n    }\n}\nexport function getNumberOrAutoValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            var isNumber = Util._isNumber(val);\n            var isAuto = val === 'auto';\n            if (!(isNumber || isAuto)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or \"auto\".');\n            }\n            return val;\n        };\n    }\n}\nexport function getStringValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isString(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string.');\n            }\n            return val;\n        };\n    }\n}\nexport function getStringOrGradientValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            const isString = Util._isString(val);\n            const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' ||\n                (val && val.addColorStop);\n            if (!(isString || isGradient)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string or a native gradient.');\n            }\n            return val;\n        };\n    }\n}\nexport function getFunctionValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isFunction(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a function.');\n            }\n            return val;\n        };\n    }\n}\nexport function getNumberArrayValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n            if (TypedArray && val instanceof TypedArray) {\n                return val;\n            }\n            if (!Util._isArray(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a array of numbers.');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util._isNumber(item)) {\n                        Util.warn('\"' +\n                            attr +\n                            '\" attribute has non numeric element ' +\n                            item +\n                            '. Make sure that all elements are numbers.');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nexport function getBooleanValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            var isBool = val === true || val === false;\n            if (!isBool) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a boolean.');\n            }\n            return val;\n        };\n    }\n}\nexport function getComponentValidator(components) {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (val === undefined || val === null) {\n                return val;\n            }\n            if (!Util.isObject(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be an object with properties ' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\n", "import { Util } from './Util.js';\nimport { getComponentValidator } from './Validators.js';\nvar GET = 'get', SET = 'set';\nexport const Factory = {\n    addGetterSetter(constructor, attr, def, validator, after) {\n        Factory.addGetter(constructor, attr, def);\n        Factory.addSetter(constructor, attr, validator, after);\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter(constructor, attr, def) {\n        var method = GET + Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    var val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter(constructor, attr, validator, after) {\n        var method = SET + Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter(constructor, attr, validator, after) {\n        var method = SET + Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter(constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            var ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = getComponentValidator(components);\n        constructor.prototype[setter] = function (val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            if (!val) {\n                components.forEach((component) => {\n                    this._setAttr(attr + capitalize(component), undefined);\n                });\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter(constructor, attr) {\n        var capitalizedAttr = Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter(constructor, attr, def, validator) {\n        Util.error('Adding deprecated ' + attr);\n        var method = GET + Util._capitalize(attr);\n        var message = attr +\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n        constructor.prototype[method] = function () {\n            Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        Factory.addSetter(constructor, attr, validator, function () {\n            Util.error(message);\n        });\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat(constructor, methods) {\n        Util.each(methods, function (oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = GET + Util._capitalize(oldMethodName);\n            var oldSetter = SET + Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util.error('\"' +\n                    oldMethodName +\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\n                    newMethodName +\n                    '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter() {\n        this._filterUpToDate = false;\n    },\n};\n", "import { Util } from './Util.js';\nimport { Konva } from './Global.js';\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nvar CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nexport class Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        if (Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        var lineCap = shape.getLineCap();\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        var lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip() {\n        this._context.clip();\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y, path, fillRule) {\n        if (path) {\n            return this._context.isPointInPath(path, x, y, fillRule);\n        }\n        return this._context.isPointInPath(x, y, fillRule);\n    }\n    fill(path2d) {\n        if (path2d) {\n            this._context.fill(path2d);\n        }\n        else {\n            this._context.fill();\n        }\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = a0;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nexport class SceneContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d');\n    }\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        var grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        var hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        var hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        var hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        var hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        var start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexport class HitContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\n", "import { Util } from './Util.js';\nimport { SceneContext, HitContext } from './Context.js';\nimport { Konva } from './Global.js';\nimport { Factory } from './Factory.js';\nimport { getNumberValidator } from './Validators.js';\nvar _pixelRatio;\nfunction getDevicePixelRatio() {\n    if (_pixelRatio) {\n        return _pixelRatio;\n    }\n    var canvas = Util.createCanvasElement();\n    var context = canvas.getContext('2d');\n    _pixelRatio = (function () {\n        var devicePixelRatio = Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            context.backingStorePixelRatio ||\n            1;\n        return devicePixelRatio / backingStoreRatio;\n    })();\n    Util.releaseCanvas(canvas);\n    return _pixelRatio;\n}\nexport class Canvas {\n    constructor(config) {\n        this.pixelRatio = 1;\n        this.width = 0;\n        this.height = 0;\n        this.isCache = false;\n        var conf = config || {};\n        var pixelRatio = conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n        this.pixelRatio = pixelRatio;\n        this._canvas = Util.createCanvasElement();\n        this._canvas.style.padding = '0';\n        this._canvas.style.margin = '0';\n        this._canvas.style.border = '0';\n        this._canvas.style.background = 'transparent';\n        this._canvas.style.position = 'absolute';\n        this._canvas.style.top = '0';\n        this._canvas.style.left = '0';\n    }\n    getContext() {\n        return this.context;\n    }\n    getPixelRatio() {\n        return this.pixelRatio;\n    }\n    setPixelRatio(pixelRatio) {\n        var previousRatio = this.pixelRatio;\n        this.pixelRatio = pixelRatio;\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n    }\n    setWidth(width) {\n        this.width = this._canvas.width = width * this.pixelRatio;\n        this._canvas.style.width = width + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    setHeight(height) {\n        this.height = this._canvas.height = height * this.pixelRatio;\n        this._canvas.style.height = height + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    setSize(width, height) {\n        this.setWidth(width || 0);\n        this.setHeight(height || 0);\n    }\n    toDataURL(mimeType, quality) {\n        try {\n            return this._canvas.toDataURL(mimeType, quality);\n        }\n        catch (e) {\n            try {\n                return this._canvas.toDataURL();\n            }\n            catch (err) {\n                Util.error('Unable to get data URL. ' +\n                    err.message +\n                    ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                return '';\n            }\n        }\n    }\n}\nFactory.addGetterSetter(Canvas, 'pixelRatio', undefined, getNumberValidator());\nexport class SceneCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.context = new SceneContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\nexport class HitCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.hitCanvas = true;\n        this.context = new HitContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\n", "import { Konva } from './Global.js';\nimport { Util } from './Util.js';\nexport const DD = {\n    get isDragging() {\n        var flag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus === 'dragging') {\n                flag = true;\n            }\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node() {\n        var node;\n        DD._dragElements.forEach((elem) => {\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag(evt) {\n        const nodesToFireEvents = [];\n        DD._dragElements.forEach((elem, key) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) {\n                elem.pointerId = Util._getFirstPointerId(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus !== 'dragging') {\n                var dragDistance = node.dragDistance();\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) {\n                    return;\n                }\n                node.startDrag({ evt });\n                if (!node.isDragging()) {\n                    return;\n                }\n            }\n            node._setDragPosition(evt, elem);\n            nodesToFireEvents.push(node);\n        });\n        nodesToFireEvents.forEach((node) => {\n            node.fire('dragmove', {\n                type: 'dragmove',\n                target: node,\n                evt: evt,\n            }, true);\n        });\n    },\n    _endDragBefore(evt) {\n        const drawNodes = [];\n        DD._dragElements.forEach((elem) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            if (evt) {\n                stage.setPointersPositions(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n                DD.justDragged = true;\n                Konva._mouseListenClick = false;\n                Konva._touchListenClick = false;\n                Konva._pointerListenClick = false;\n                elem.dragStatus = 'stopped';\n            }\n            const drawNode = elem.node.getLayer() ||\n                (elem.node instanceof Konva['Stage'] && elem.node);\n            if (drawNode && drawNodes.indexOf(drawNode) === -1) {\n                drawNodes.push(drawNode);\n            }\n        });\n        drawNodes.forEach((drawNode) => {\n            drawNode.draw();\n        });\n    },\n    _endDragAfter(evt) {\n        DD._dragElements.forEach((elem, key) => {\n            if (elem.dragStatus === 'stopped') {\n                elem.node.fire('dragend', {\n                    type: 'dragend',\n                    target: elem.node,\n                    evt: evt,\n                }, true);\n            }\n            if (elem.dragStatus !== 'dragging') {\n                DD._dragElements.delete(key);\n            }\n        });\n    },\n};\nif (Konva.isBrowser) {\n    window.addEventListener('mouseup', DD._endDragBefore, true);\n    window.addEventListener('touchend', DD._endDragBefore, true);\n    window.addEventListener('mousemove', DD._drag);\n    window.addEventListener('touchmove', DD._drag);\n    window.addEventListener('mouseup', DD._endDragAfter, false);\n    window.addEventListener('touchend', DD._endDragAfter, false);\n}\n", "import { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator, } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\n    'xChange.konva',\n    'yChange.konva',\n    'scaleXChange.konva',\n    'scaleYChange.konva',\n    'skewXChange.konva',\n    'skewYChange.konva',\n    'rotationChange.konva',\n    'offsetXChange.konva',\n    'offsetYChange.konva',\n    'transformsEnabledChange.konva',\n].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n    constructor(config) {\n        this._id = idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\n            this._cache.get(attr)) {\n            this._cache.get(attr).dirty = true;\n        }\n        else if (attr) {\n            this._cache.delete(attr);\n        }\n        else {\n            this._cache.clear();\n        }\n    }\n    _getCache(attr, privateGetter) {\n        var cache = this._cache.get(attr);\n        var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n        var invalid = cache === undefined || (isTransform && cache.dirty === true);\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\n            this.on(depsString, () => {\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get(CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === ABSOLUTE_TRANSFORM) {\n            this.fire('absoluteTransformChange');\n        }\n    }\n    clearCache() {\n        if (this._cache.has(CANVAS)) {\n            const { scene, filter, hit } = this._cache.get(CANVAS);\n            Util.releaseCanvas(scene, filter, hit);\n            this._cache.delete(CANVAS);\n        }\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        var conf = config || {};\n        var rect = {};\n        if (conf.x === undefined ||\n            conf.y === undefined ||\n            conf.width === undefined ||\n            conf.height === undefined) {\n            rect = this.getClientRect({\n                skipTransform: true,\n                relativeTo: this.getParent(),\n            });\n        }\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? Math.floor(rect.x) : conf.x, y = conf.y === undefined ? Math.floor(rect.y) : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n            return;\n        }\n        width += offset * 2 + 1;\n        height += offset * 2 + 1;\n        x -= offset;\n        y -= offset;\n        var cachedSceneCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n        }), cachedFilterCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n        }), cachedHitCanvas = new HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height,\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete(CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr('strokeStyle', 'red');\n            sceneContext.setAttr('lineWidth', 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set(CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y,\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has(CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error('abstract \"getClientRect\" method call');\n    }\n    _transformedRect(rect, top) {\n        var points = [\n            { x: rect.x, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y + rect.height },\n            { x: rect.x, y: rect.y + rect.height },\n        ];\n        var minX, minY, maxX, maxY;\n        var trans = this.getAbsoluteTransform(top);\n        points.forEach(function (point) {\n            var transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        var cacheCanvas = this._getCachedSceneCanvas();\n        var ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                var ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for (n = 0; n < len; n++) {\n                        filter = filters[n];\n                        if (typeof filter !== 'function') {\n                            Util.error('Filter should be type of function, but got ' +\n                                typeof filter +\n                                ' instead. Please check correct filters');\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                }\n                catch (e) {\n                    Util.error('Unable to apply filter. ' +\n                        e.message +\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (arguments.length === 3) {\n            return this._delegate.apply(this, arguments);\n        }\n        var events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1] || '';\n            if (!this.eventListeners[baseEvent]) {\n                this.eventListeners[baseEvent] = [];\n            }\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler,\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        var events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (!evtStr) {\n            for (t in this.eventListeners) {\n                this._off(t);\n            }\n        }\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) {\n                    this._off(baseEvent, name, callback);\n                }\n            }\n            else {\n                for (t in this.eventListeners) {\n                    this._off(t, name, callback);\n                }\n            }\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        var e = {\n            target: this,\n            type: evt.type,\n            evt: evt,\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function (evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        var stopNode = this;\n        this.on(event, function (evt) {\n            var targets = evt.target.findAncestors(selector, true, stopNode);\n            for (var i = 0; i < targets.length; i++) {\n                evt = Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) {\n            this.stopDrag();\n        }\n        DD._dragElements.delete(this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache(STAGE);\n        this._clearSelfAndDescendantCache(VISIBLE);\n        this._clearSelfAndDescendantCache(LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        var parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        this.clearCache();\n        return this;\n    }\n    getAttr(attr) {\n        var method = 'get' + Util._capitalize(attr);\n        if (Util._isFunction(this[method])) {\n            return this[method]();\n        }\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        var parent = this.getParent(), ancestors = [];\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return this.attrs || {};\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(() => {\n            var key, method;\n            if (!config) {\n                return this;\n            }\n            for (key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = SET + Util._capitalize(key);\n                if (Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache(LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isListening(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    isVisible() {\n        return this._getCache(VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isVisible(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) {\n            return this._isVisible(top) && this._isListening(top);\n        }\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus !== 'dragging') {\n                return;\n            }\n            else if (elem.node.nodeType === 'Stage') {\n                layerUnderDrag = true;\n            }\n            else if (elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                child = children[n];\n                index++;\n                if (child.nodeType !== SHAPE) {\n                    nodes = nodes.concat(child.getChildren().slice());\n                }\n                if (child._id === that._id) {\n                    n = len;\n                }\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                addChildren(nodes);\n            }\n        }\n        if (that.nodeType !== UPPER_STAGE) {\n            addChildren(that.getStage().getChildren());\n        }\n        return index;\n    }\n    getDepth() {\n        var depth = 0, parent = this.parent;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(() => {\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y(),\n        };\n    }\n    getRelativePointerPosition() {\n        if (!this.getStage()) {\n            return null;\n        }\n        var pos = this.getStage().getPointerPosition();\n        if (!pos) {\n            return null;\n        }\n        var transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while (parent) {\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) {\n            top = true;\n        }\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        var origTrans = this._clearTransform();\n        this.attrs.x = origTrans.x;\n        this.attrs.y = origTrans.y;\n        delete origTrans.x;\n        delete origTrans.y;\n        this._clearCache(TRANSFORM);\n        var it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y,\n        };\n        this._setTransform(origTrans);\n        this.setPosition({ x: pos.x, y: pos.y });\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        var key;\n        for (key in trans) {\n            this.attrs[key] = trans[key];\n        }\n    }\n    _clearTransform() {\n        var trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY(),\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) {\n            x += changeX;\n        }\n        if (changeY !== undefined) {\n            y += changeY;\n        }\n        this.setPosition({ x: x, y: y });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        var family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) {\n            return;\n        }\n        family.unshift(this);\n        while (parent && (!top || parent._id !== top._id)) {\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for (n = 0; n < len; n++) {\n            func(family[n]);\n        }\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToTop function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.push(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveUp() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveUp function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveDown function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToBottom function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            Util.warn('Node has no parent. zIndex parameter is ignored.');\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\n            Util.warn('Unexpected value ' +\n                zIndex +\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\n                (this.parent.children.length - 1) +\n                '.');\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        var absOpacity = this.opacity();\n        var parent = this.getParent();\n        if (parent && !parent._isUnderCache) {\n            absOpacity *= parent.getAbsoluteOpacity();\n        }\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        obj.attrs = {};\n        for (key in attrs) {\n            val = attrs[key];\n            nonPlainObject =\n                Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n            if (nonPlainObject) {\n                continue;\n            }\n            getter = typeof this[key] === 'function' && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) {\n                obj.attrs[key] = val;\n            }\n        }\n        obj.className = this.getClassName();\n        return Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        var res = [];\n        if (includeSelf && this._isMatch(selector)) {\n            res.push(this);\n        }\n        var ancestor = this.parent;\n        while (ancestor) {\n            if (ancestor === stopNode) {\n                return res;\n            }\n            if (ancestor._isMatch(selector)) {\n                res.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (typeof selector === 'function') {\n            return selector(this);\n        }\n        var selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\n        for (n = 0; n < len; n++) {\n            sel = selectorArr[n];\n            if (!Util.isValidSelector(sel)) {\n                Util.warn('Selector \"' +\n                    sel +\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                Util.warn('Konva is awesome, right?');\n            }\n            if (sel.charAt(0) === '#') {\n                if (this.id() === sel.slice(1)) {\n                    return true;\n                }\n            }\n            else if (sel.charAt(0) === '.') {\n                if (this.hasName(sel.slice(1))) {\n                    return true;\n                }\n            }\n            else if (this.className === sel || this.nodeType === sel) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getLayer() {\n        var parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache(STAGE, this._getStage);\n    }\n    _getStage() {\n        var parent = this.getParent();\n        if (parent) {\n            return parent.getStage();\n        }\n        else {\n            return undefined;\n        }\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) {\n            this._fireAndBubble(eventType, evt);\n        }\n        else {\n            this._fire(eventType, evt);\n        }\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) {\n            return this._getAbsoluteTransform(top);\n        }\n        else {\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n        }\n    }\n    _getAbsoluteTransform(top) {\n        var at;\n        if (top) {\n            at = new Transform();\n            this._eachAncestorReverse(function (node) {\n                var transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === 'all') {\n                    at.multiply(node.getTransform());\n                }\n                else if (transformsEnabled === 'position') {\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n                }\n            }, top);\n            return at;\n        }\n        else {\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n            if (this.parent) {\n                this.parent.getAbsoluteTransform().copyInto(at);\n            }\n            else {\n                at.reset();\n            }\n            var transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === 'all') {\n                at.multiply(this.getTransform());\n            }\n            else if (transformsEnabled === 'position') {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        var parent = this;\n        while (parent) {\n            if (parent._isUnderCache) {\n                top = parent;\n            }\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY,\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache(TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        var m = this._cache.get(TRANSFORM) || new Transform();\n        m.reset();\n        var x = this.x(), y = this.y(), rotation = Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) {\n            m.translate(x, y);\n        }\n        if (rotation !== 0) {\n            m.rotate(rotation);\n        }\n        if (skewX !== 0 || skewY !== 0) {\n            m.skew(skewX, skewY);\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            m.scale(scaleX, scaleY);\n        }\n        if (offsetX !== 0 || offsetY !== 0) {\n            m.translate(-1 * offsetX, -1 * offsetY);\n        }\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        var attrs = Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for (key in obj) {\n            attrs[key] = obj[key];\n        }\n        var node = new this.constructor(attrs);\n        for (key in this.eventListeners) {\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for (n = 0; n < len; n++) {\n                listener = allListeners[n];\n                if (listener.name.indexOf(KONVA) < 0) {\n                    if (!node.eventListeners[key]) {\n                        node.eventListeners[key] = [];\n                    }\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        var box = this.getClientRect();\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : Math.floor(box.x), y = config.y !== undefined ? config.y : Math.floor(box.y), pixelRatio = config.pixelRatio || 1, canvas = new SceneCanvas({\n            width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n            height: config.height ||\n                Math.ceil(box.height) ||\n                (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio,\n        }), context = canvas.getContext();\n        if (config.imageSmoothingEnabled === false) {\n            context._context.imageSmoothingEnabled = false;\n        }\n        context.save();\n        if (x || y) {\n            context.translate(-1 * x, -1 * y);\n        }\n        this.drawScene(canvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        var mimeType = config.mimeType || null, quality = config.quality || null;\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) {\n            config.callback(url);\n        }\n        return url;\n    }\n    toImage(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                Util._urlToImage(this.toDataURL(config), function (img) {\n                    resolve(img);\n                    callback === null || callback === void 0 ? void 0 : callback(img);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    toBlob(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                this.toCanvas(config).toBlob((blob) => {\n                    resolve(blob);\n                    callback === null || callback === void 0 ? void 0 : callback(blob);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height(),\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) {\n            return this.attrs.dragDistance;\n        }\n        else if (this.parent) {\n            return this.parent.getDragDistance();\n        }\n        else {\n            return Konva.dragDistance;\n        }\n    }\n    _off(type, name, callback) {\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\n        for (i = 0; i < evtListeners.length; i++) {\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== 'konva' || name === 'konva') &&\n                (!name || evtName === name) &&\n                (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal,\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            var oldName = this.name();\n            var newName = oldName ? oldName + ' ' + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) {\n            return false;\n        }\n        const fullName = this.name();\n        if (!fullName) {\n            return false;\n        }\n        var names = (fullName || '').split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        var names = (this.name() || '').split(/\\s/g);\n        var index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(' '));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        var func = this[SET + Util._capitalize(attr)];\n        if (Util._isFunction(func)) {\n            func.call(this, val);\n        }\n        else {\n            this._setAttr(attr, val);\n        }\n        return this;\n    }\n    _requestDraw() {\n        if (Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        var oldVal = this.attrs[key];\n        if (oldVal === val && !Util.isObject(val)) {\n            return;\n        }\n        if (val === undefined || val === null) {\n            delete this.attrs[key];\n        }\n        else {\n            this.attrs[key] = val;\n        }\n        if (this._shouldFireChangeEvents) {\n            this._fireChangeEvent(key, oldVal, val);\n        }\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        var oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) {\n                this.attrs[key] = this.getAttr(key);\n            }\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === SHAPE) {\n            evt.target = this;\n        }\n        var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n            ((compareShape &&\n                (this === compareShape ||\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\n                (this.nodeType === 'Stage' && !compareShape));\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                compareShape &&\n                compareShape.isAncestorOf &&\n                compareShape.isAncestorOf(this) &&\n                !compareShape.isAncestorOf(this.parent);\n            if (((evt && !evt.cancelBubble) || !evt) &&\n                this.parent &&\n                this.parent.isListening() &&\n                !stopBubble) {\n                if (compareShape && compareShape.parent) {\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                }\n                else {\n                    this._fireAndBubble.call(this.parent, eventType, evt);\n                }\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        let listeners = this._cache.get(ALL_LISTENERS);\n        if (!listeners) {\n            listeners = {};\n            let obj = Object.getPrototypeOf(this);\n            while (obj) {\n                if (!obj.eventListeners) {\n                    obj = Object.getPrototypeOf(obj);\n                    continue;\n                }\n                for (var event in obj.eventListeners) {\n                    const newEvents = obj.eventListeners[event];\n                    const oldEvents = listeners[event] || [];\n                    listeners[event] = newEvents.concat(oldEvents);\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n            this._cache.set(ALL_LISTENERS, listeners);\n        }\n        return listeners[eventType];\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) {\n            for (var i = 0; i < topListeners.length; i++) {\n                topListeners[i].handler.call(this, evt);\n            }\n        }\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) {\n            for (var i = 0; i < selfListeners.length; i++) {\n                selfListeners[i].handler.call(this, evt);\n            }\n        }\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        var pointerId = evt ? evt.pointerId : undefined;\n        var stage = this.getStage();\n        var ap = this.getAbsolutePosition();\n        var pos = stage._getPointerById(pointerId) ||\n            stage._changedPointerPositions[0] ||\n            ap;\n        DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y,\n            },\n            dragStatus: 'ready',\n            pointerId,\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!DD._dragElements.has(this._id)) {\n            this._createDragElement(evt);\n        }\n        const elem = DD._dragElements.get(this._id);\n        elem.dragStatus = 'dragging';\n        this.fire('dragstart', {\n            type: 'dragstart',\n            target: this,\n            evt: evt && evt.evt,\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) {\n            return;\n        }\n        var newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y,\n        };\n        var dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) {\n                Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n            }\n            else {\n                newNodePos = bounded;\n            }\n        }\n        if (!this._lastPos ||\n            this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = DD._dragElements.get(this._id);\n        if (elem) {\n            elem.dragStatus = 'stopped';\n        }\n        DD._endDragBefore(evt);\n        DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr('draggable', draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === 'dragging' : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on('mousedown.konva touchstart.konva', function (evt) {\n            var shouldCheckButton = evt.evt['button'] !== undefined;\n            var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n            if (!canDrag) {\n                return;\n            }\n            if (this.isDragging()) {\n                return;\n            }\n            var hasDraggingChild = false;\n            DD._dragElements.forEach((elem) => {\n                if (this.isAncestorOf(elem.node)) {\n                    hasDraggingChild = true;\n                }\n            });\n            if (!hasDraggingChild) {\n                this._createDragElement(evt);\n            }\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            this._dragCleanup();\n            var stage = this.getStage();\n            if (!stage) {\n                return;\n            }\n            const dragElement = DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\n            if (isDragging) {\n                this.stopDrag();\n            }\n            else if (isReady) {\n                DD._dragElements.delete(this._id);\n            }\n        }\n    }\n    _dragCleanup() {\n        this.off('mousedown.konva');\n        this.off('touchstart.konva');\n    }\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + 2 * margin.x,\n            height: stage.height() + 2 * margin.y,\n        };\n        return Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if (Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        var className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) {\n            obj.attrs.container = container;\n        }\n        if (!Konva[className]) {\n            Util.warn('Can not find a node with class name \"' +\n                className +\n                '\". Fallback to \"Shape\".');\n            className = 'Shape';\n        }\n        const Class = Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                no.add(Node._createNode(children[n]));\n            }\n        }\n        return no;\n    }\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n    this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n    this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n    this._filterUpToDate = false;\n    return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation',\n});\n", "import { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator } from './Validators.js';\nexport class Container extends Node {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n    }\n    getChildren(filterFunc) {\n        if (!filterFunc) {\n            return this.children || [];\n        }\n        const children = this.children || [];\n        var results = [];\n        children.forEach(function (child) {\n            if (filterFunc(child)) {\n                results.push(child);\n            }\n        });\n        return results;\n    }\n    hasChildren() {\n        return this.getChildren().length > 0;\n    }\n    removeChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    destroyChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    add(...children) {\n        if (children.length === 0) {\n            return this;\n        }\n        if (children.length > 1) {\n            for (var i = 0; i < children.length; i++) {\n                this.add(children[i]);\n            }\n            return this;\n        }\n        const child = children[0];\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        this._validateAdd(child);\n        child.index = this.getChildren().length;\n        child.parent = this;\n        child._clearCaches();\n        this.getChildren().push(child);\n        this._fire('add', {\n            child: child,\n        });\n        this._requestDraw();\n        return this;\n    }\n    destroy() {\n        if (this.hasChildren()) {\n            this.destroyChildren();\n        }\n        super.destroy();\n        return this;\n    }\n    find(selector) {\n        return this._generalFind(selector, false);\n    }\n    findOne(selector) {\n        var result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    }\n    _generalFind(selector, findOne) {\n        var retArr = [];\n        this._descendants((node) => {\n            const valid = node._isMatch(selector);\n            if (valid) {\n                retArr.push(node);\n            }\n            if (valid && findOne) {\n                return true;\n            }\n            return false;\n        });\n        return retArr;\n    }\n    _descendants(fn) {\n        let shouldStop = false;\n        const children = this.getChildren();\n        for (const child of children) {\n            shouldStop = fn(child);\n            if (shouldStop) {\n                return true;\n            }\n            if (!child.hasChildren()) {\n                continue;\n            }\n            shouldStop = child._descendants(fn);\n            if (shouldStop) {\n                return true;\n            }\n        }\n        return false;\n    }\n    toObject() {\n        var obj = Node.prototype.toObject.call(this);\n        obj.children = [];\n        this.getChildren().forEach((child) => {\n            obj.children.push(child.toObject());\n        });\n        return obj;\n    }\n    isAncestorOf(node) {\n        var parent = node.getParent();\n        while (parent) {\n            if (parent._id === this._id) {\n                return true;\n            }\n            parent = parent.getParent();\n        }\n        return false;\n    }\n    clone(obj) {\n        var node = Node.prototype.clone.call(this, obj);\n        this.getChildren().forEach(function (no) {\n            node.add(no.clone());\n        });\n        return node;\n    }\n    getAllIntersections(pos) {\n        var arr = [];\n        this.find('Shape').forEach(function (shape) {\n            if (shape.isVisible() && shape.intersects(pos)) {\n                arr.push(shape);\n            }\n        });\n        return arr;\n    }\n    _clearSelfAndDescendantCache(attr) {\n        var _a;\n        super._clearSelfAndDescendantCache(attr);\n        if (this.isCached()) {\n            return;\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n            node._clearSelfAndDescendantCache(attr);\n        });\n    }\n    _setChildrenIndices() {\n        var _a;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n            child.index = n;\n        });\n        this._requestDraw();\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        var caching = canvas && canvas.isCache;\n        if (!this.isVisible() && !caching) {\n            return this;\n        }\n        if (cachedSceneCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawScene', canvas, top);\n        }\n        return this;\n    }\n    drawHit(can, top) {\n        if (!this.shouldDrawHit(top)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawHit', canvas, top);\n        }\n        return this;\n    }\n    _drawChildren(drawMethod, canvas, top) {\n        var _a;\n        var context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc;\n        const selfCache = top === this;\n        if (hasClip) {\n            context.save();\n            var transform = this.getAbsoluteTransform(top);\n            var m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            if (clipFunc) {\n                clipFunc.call(this, context, this);\n            }\n            else {\n                var clipX = this.clipX();\n                var clipY = this.clipY();\n                context.rect(clipX, clipY, clipWidth, clipHeight);\n            }\n            context.clip();\n            m = transform.copy().invert().getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        var hasComposition = !selfCache &&\n            this.globalCompositeOperation() !== 'source-over' &&\n            drawMethod === 'drawScene';\n        if (hasComposition) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            child[drawMethod](canvas, top);\n        });\n        if (hasComposition) {\n            context.restore();\n        }\n        if (hasClip) {\n            context.restore();\n        }\n    }\n    getClientRect(config) {\n        var _a;\n        config = config || {};\n        var skipTransform = config.skipTransform;\n        var relativeTo = config.relativeTo;\n        var minX, minY, maxX, maxY;\n        var selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0,\n        };\n        var that = this;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            if (!child.visible()) {\n                return;\n            }\n            var rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: config.skipShadow,\n                skipStroke: config.skipStroke,\n            });\n            if (rect.width === 0 && rect.height === 0) {\n                return;\n            }\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            }\n            else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        var shapes = this.find('Shape');\n        var hasVisible = false;\n        for (var i = 0; i < shapes.length; i++) {\n            var shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible && minX !== undefined) {\n            selfRect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY,\n            };\n        }\n        else {\n            selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (!skipTransform) {\n            return this._transformedRect(selfRect, relativeTo);\n        }\n        return selfRect;\n    }\n}\nFactory.addComponentsGetterSetter(Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height',\n]);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');\n", "import { Konva } from './Global.js';\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Konva._global['PointerEvent'] !== undefined;\nexport function getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nexport function createEvent(evt) {\n    return {\n        evt,\n        pointerId: evt.pointerId,\n    };\n}\nexport function hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nexport function setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    const stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n    }\n}\nexport function releaseCapture(pointerId, target) {\n    const shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    const stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n    }\n}\n", "import { Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Container } from './Container.js';\nimport { Konva } from './Global.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { DD } from './DragAndDrop.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', POINTEROUT = 'pointerout', POINTERLEAVE = 'pointerleave', POINTEROVER = 'pointerover', POINTERENTER = 'pointerenter', CONTEXTMENU = 'contextmenu', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TOUCHMOVE = 'touchmove', TOUCHCANCEL = 'touchcancel', WHEEL = 'wheel', MAX_LAYERS_NUMBER = 5, EVENTS = [\n    [MOUSEENTER, '_pointerenter'],\n    [MOUSEDOWN, '_pointerdown'],\n    [MOUSEMOVE, '_pointermove'],\n    [MOUSEUP, '_pointerup'],\n    [MOUSELEAVE, '_pointerleave'],\n    [TOUCHSTART, '_pointerdown'],\n    [TOUCHMOVE, '_pointermove'],\n    [TOUCHEND, '_pointerup'],\n    [TOUCHCANCEL, '_pointercancel'],\n    [MOUSEOVER, '_pointerover'],\n    [WHEEL, '_wheel'],\n    [CONTEXTMENU, '_contextmenu'],\n    [POINTERDOWN, '_pointerdown'],\n    [POINTERMOVE, '_pointermove'],\n    [POINTERUP, '_pointerup'],\n    [POINTERCANCEL, '_pointercancel'],\n    [LOSTPOINTERCAPTURE, '_lostpointercapture'],\n];\nconst EVENTS_MAP = {\n    mouse: {\n        [POINTEROUT]: MOUSEOUT,\n        [POINTERLEAVE]: MOUSELEAVE,\n        [POINTEROVER]: MOUSEOVER,\n        [POINTERENTER]: MOUSEENTER,\n        [POINTERMOVE]: MOUSEMOVE,\n        [POINTERDOWN]: MOUSEDOWN,\n        [POINTERUP]: MOUSEUP,\n        [POINTERCANCEL]: 'mousecancel',\n        pointerclick: 'click',\n        pointerdblclick: 'dblclick',\n    },\n    touch: {\n        [POINTEROUT]: 'touchout',\n        [POINTERLEAVE]: 'touchleave',\n        [POINTEROVER]: 'touchover',\n        [POINTERENTER]: 'touchenter',\n        [POINTERMOVE]: TOUCHMOVE,\n        [POINTERDOWN]: TOUCHSTART,\n        [POINTERUP]: TOUCHEND,\n        [POINTERCANCEL]: TOUCHCANCEL,\n        pointerclick: 'tap',\n        pointerdblclick: 'dbltap',\n    },\n    pointer: {\n        [POINTEROUT]: POINTEROUT,\n        [POINTERLEAVE]: POINTERLEAVE,\n        [POINTEROVER]: POINTEROVER,\n        [POINTERENTER]: POINTERENTER,\n        [POINTERMOVE]: POINTERMOVE,\n        [POINTERDOWN]: POINTERDOWN,\n        [POINTERUP]: POINTERUP,\n        [POINTERCANCEL]: POINTERCANCEL,\n        pointerclick: 'pointerclick',\n        pointerdblclick: 'pointerdblclick',\n    },\n};\nconst getEventType = (type) => {\n    if (type.indexOf('pointer') >= 0) {\n        return 'pointer';\n    }\n    if (type.indexOf('touch') >= 0) {\n        return 'touch';\n    }\n    return 'mouse';\n};\nconst getEventsMap = (eventType) => {\n    const type = getEventType(eventType);\n    if (type === 'pointer') {\n        return Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n    }\n    if (type === 'touch') {\n        return EVENTS_MAP.touch;\n    }\n    if (type === 'mouse') {\n        return EVENTS_MAP.mouse;\n    }\n};\nfunction checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n    }\n    return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexport const stages = [];\nexport class Stage extends Container {\n    constructor(config) {\n        super(checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        stages.push(this);\n        this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n        this.on('visibleChange.konva', this._checkVisibility);\n        this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n            checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === 'Layer';\n        const isFastLayer = child.getType() === 'FastLayer';\n        const valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util.throw('You may only add layers to the stage.');\n        }\n    }\n    _checkVisibility() {\n        if (!this.content) {\n            return;\n        }\n        const style = this.visible() ? '' : 'none';\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === '.') {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== '#') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw 'Can not find container in document with id ' + id;\n            }\n        }\n        this._setAttr('container', container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        var layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    }\n    clone(obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container =\n            typeof document !== 'undefined' && document.createElement('div');\n        return Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        var content = this.content;\n        if (content && Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        var index = stages.indexOf(this);\n        if (index > -1) {\n            stages.splice(index, 1);\n        }\n        Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y,\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p) => p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        var canvas = new SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1,\n        });\n        var _context = canvas.getContext()._context;\n        var layers = this.children;\n        if (config.x || config.y) {\n            _context.translate(-1 * config.x, -1 * config.y);\n        }\n        layers.forEach(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) {\n            return null;\n        }\n        var layers = this.children, len = layers.length, end = len - 1, n;\n        for (n = end; n >= 0; n--) {\n            const shape = layers[n].getIntersection(pos);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    }\n    _resizeDOM() {\n        var width = this.width();\n        var height = this.height();\n        if (this.content) {\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer) => {\n            layer.setSize({ width, height });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        super.add(layer);\n        var length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util.warn('The stage has ' +\n                length +\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n        }\n        layer.setSize({ width: this.width(), height: this.height() });\n        layer.draw();\n        if (Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!Konva.isBrowser) {\n            return;\n        }\n        EVENTS.forEach(([event, methodName]) => {\n            this.content.addEventListener(event, (evt) => {\n                this[methodName](evt);\n            }, { passive: false });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerenter, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + 'targetShape'];\n        if (shape && !shape.getStage()) {\n            shape = null;\n        }\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var targetShape = this._getTargetShape(eventType);\n        var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this[eventType + 'targetShape'] = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n        this.pointerPos = undefined;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            var shape = this.getIntersection(pos);\n            DD.justDragged = false;\n            Konva['_' + eventType + 'ListenClick'] = true;\n            const hasShape = shape && shape.isListening();\n            if (!hasShape) {\n                return;\n            }\n            if (Konva.capturePointerEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            this[eventType + 'ClickStartShape'] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id,\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf('touch') >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerdown, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._pointerPositions[0].id,\n            });\n        }\n    }\n    _pointermove(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        if (DD.isDragging && DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n        this.setPointersPositions(evt);\n        var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n        if (!eventsEnabled) {\n            return;\n        }\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        var targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            var differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n                targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n                    shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n                    this[eventType + 'targetShape'] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n            }\n            else {\n                if (targetShape) {\n                    this._fire(events.pointerover, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                    this[eventType + 'targetShape'] = null;\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointermove, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n    }\n    _pointerup(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + 'ClickStartShape'];\n        const clickEndShape = this[eventType + 'ClickEndShape'];\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            let fireDblClick = false;\n            if (Konva['_' + eventType + 'InDblClickWindow']) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            else if (!DD.justDragged) {\n                Konva['_' + eventType + 'InDblClickWindow'] = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            this[eventType + 'DblTimeout'] = setTimeout(function () {\n                Konva['_' + eventType + 'InDblClickWindow'] = false;\n            }, Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + 'ClickEndShape'] = shape;\n                shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n                if (Konva['_' + eventType + 'ListenClick'] &&\n                    clickStartShape &&\n                    clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                        shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n                    }\n                }\n            }\n            else {\n                this[eventType + 'ClickEndShape'] = null;\n                if (Konva['_' + eventType + 'ListenClick']) {\n                    this._fire(events.pointerclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n                if (fireDblClick) {\n                    this._fire(events.pointerdblclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerup, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n        Konva['_' + eventType + 'ListenClick'] = false;\n        if (evt.cancelable && eventType !== 'touch') {\n            evt.preventDefault();\n        }\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch) => {\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n        }\n        else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y,\n            };\n            this._pointerPositions = [{ x, y, id: Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x, y, id: Util._getFirstPointerId(evt) },\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) {\n            return {\n                top: 0,\n                left: 0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        var rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1,\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new SceneCanvas({\n            width: this.width(),\n            height: this.height(),\n        });\n        this.bufferHitCanvas = new HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height(),\n        });\n        if (!Konva.isBrowser) {\n            return;\n        }\n        var container = this.container();\n        if (!container) {\n            throw 'Stage has no container. A container is required.';\n        }\n        container.innerHTML = '';\n        this.content = document.createElement('div');\n        this.content.style.position = 'relative';\n        this.content.style.userSelect = 'none';\n        this.content.className = 'konvajs-content';\n        this.content.setAttribute('role', 'presentation');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\nStage.prototype.nodeType = STAGE;\n_registerNode(Stage);\nFactory.addGetterSetter(Stage, 'container');\n", "import { Konva } from './Global.js';\nimport { Transform, Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator, getNumberOrAutoValidator, getStringValidator, getBooleanValidator, getStringOrGradientValidator, } from './Validators.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar HAS_SHADOW = 'hasShadow';\nvar SHADOW_RGBA = 'shadowRGBA';\nvar patternImage = 'patternImage';\nvar linearGradient = 'linearGradient';\nvar radialGradient = 'radialGradient';\nlet dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util.createCanvasElement().getContext('2d');\n    return dummyContext;\n}\nexport const shapes = {};\nfunction _fillFunc(context) {\n    context.fill();\n}\nfunction _strokeFunc(context) {\n    context.stroke();\n}\nfunction _fillFuncHit(context) {\n    context.fill();\n}\nfunction _strokeFuncHit(context) {\n    context.stroke();\n}\nfunction _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n}\nfunction _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n}\nfunction _clearFillPatternCache() {\n    this._clearCache(patternImage);\n}\nfunction _clearLinearGradientCache() {\n    this._clearCache(linearGradient);\n}\nfunction _clearRadialGradientCache() {\n    this._clearCache(radialGradient);\n}\nexport class Shape extends Node {\n    constructor(config) {\n        super(config);\n        let key;\n        while (true) {\n            key = Util.getRandomColor();\n            if (key && !(key in shapes)) {\n                break;\n            }\n        }\n        this.colorKey = key;\n        shapes[key] = this;\n    }\n    getContext() {\n        Util.warn('shape.getContext() method is deprecated. Please do not use it.');\n        return this.getLayer().getContext();\n    }\n    getCanvas() {\n        Util.warn('shape.getCanvas() method is deprecated. Please do not use it.');\n        return this.getLayer().getCanvas();\n    }\n    getSceneFunc() {\n        return this.attrs.sceneFunc || this['_sceneFunc'];\n    }\n    getHitFunc() {\n        return this.attrs.hitFunc || this['_hitFunc'];\n    }\n    hasShadow() {\n        return this._getCache(HAS_SHADOW, this._hasShadow);\n    }\n    _hasShadow() {\n        return (this.shadowEnabled() &&\n            this.shadowOpacity() !== 0 &&\n            !!(this.shadowColor() ||\n                this.shadowBlur() ||\n                this.shadowOffsetX() ||\n                this.shadowOffsetY()));\n    }\n    _getFillPattern() {\n        return this._getCache(patternImage, this.__getFillPattern);\n    }\n    __getFillPattern() {\n        if (this.fillPatternImage()) {\n            var ctx = getDummyContext();\n            const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\n            if (pattern && pattern.setTransform) {\n                const tr = new Transform();\n                tr.translate(this.fillPatternX(), this.fillPatternY());\n                tr.rotate(Konva.getAngle(this.fillPatternRotation()));\n                tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n                tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n                const m = tr.getMatrix();\n                const matrix = typeof DOMMatrix === 'undefined'\n                    ? {\n                        a: m[0],\n                        b: m[1],\n                        c: m[2],\n                        d: m[3],\n                        e: m[4],\n                        f: m[5],\n                    }\n                    : new DOMMatrix(m);\n                pattern.setTransform(matrix);\n            }\n            return pattern;\n        }\n    }\n    _getLinearGradient() {\n        return this._getCache(linearGradient, this.__getLinearGradient);\n    }\n    __getLinearGradient() {\n        var colorStops = this.fillLinearGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillLinearGradientStartPoint();\n            var end = this.fillLinearGradientEndPoint();\n            var grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    _getRadialGradient() {\n        return this._getCache(radialGradient, this.__getRadialGradient);\n    }\n    __getRadialGradient() {\n        var colorStops = this.fillRadialGradientColorStops();\n        if (colorStops) {\n            var ctx = getDummyContext();\n            var start = this.fillRadialGradientStartPoint();\n            var end = this.fillRadialGradientEndPoint();\n            var grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    getShadowRGBA() {\n        return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    }\n    _getShadowRGBA() {\n        if (!this.hasShadow()) {\n            return;\n        }\n        var rgba = Util.colorToRGBA(this.shadowColor());\n        if (rgba) {\n            return ('rgba(' +\n                rgba.r +\n                ',' +\n                rgba.g +\n                ',' +\n                rgba.b +\n                ',' +\n                rgba.a * (this.shadowOpacity() || 1) +\n                ')');\n        }\n    }\n    hasFill() {\n        return this._calculate('hasFill', [\n            'fillEnabled',\n            'fill',\n            'fillPatternImage',\n            'fillLinearGradientColorStops',\n            'fillRadialGradientColorStops',\n        ], () => {\n            return (this.fillEnabled() &&\n                !!(this.fill() ||\n                    this.fillPatternImage() ||\n                    this.fillLinearGradientColorStops() ||\n                    this.fillRadialGradientColorStops()));\n        });\n    }\n    hasStroke() {\n        return this._calculate('hasStroke', [\n            'strokeEnabled',\n            'strokeWidth',\n            'stroke',\n            'strokeLinearGradientColorStops',\n        ], () => {\n            return (this.strokeEnabled() &&\n                this.strokeWidth() &&\n                !!(this.stroke() || this.strokeLinearGradientColorStops()));\n        });\n    }\n    hasHitStroke() {\n        const width = this.hitStrokeWidth();\n        if (width === 'auto') {\n            return this.hasStroke();\n        }\n        return this.strokeEnabled() && !!width;\n    }\n    intersects(point) {\n        var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;\n        bufferHitCanvas.getContext().clear();\n        this.drawHit(bufferHitCanvas, null, true);\n        p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n        return p[3] > 0;\n    }\n    destroy() {\n        Node.prototype.destroy.call(this);\n        delete shapes[this.colorKey];\n        delete this.colorKey;\n        return this;\n    }\n    _useBufferCanvas(forceFill) {\n        var _a;\n        if (!this.getStage()) {\n            return false;\n        }\n        const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n        if (!perfectDrawEnabled) {\n            return false;\n        }\n        const hasFill = forceFill || this.hasFill();\n        const hasStroke = this.hasStroke();\n        const isTransparent = this.getAbsoluteOpacity() !== 1;\n        if (hasFill && hasStroke && isTransparent) {\n            return true;\n        }\n        const hasShadow = this.hasShadow();\n        const strokeForShadow = this.shadowForStrokeEnabled();\n        if (hasFill && hasStroke && hasShadow && strokeForShadow) {\n            return true;\n        }\n        return false;\n    }\n    setStrokeHitEnabled(val) {\n        Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\n        if (val) {\n            this.hitStrokeWidth('auto');\n        }\n        else {\n            this.hitStrokeWidth(0);\n        }\n    }\n    getStrokeHitEnabled() {\n        if (this.hitStrokeWidth() === 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    getSelfRect() {\n        var size = this.size();\n        return {\n            x: this._centroid ? -size.width / 2 : 0,\n            y: this._centroid ? -size.height / 2 : 0,\n            width: size.width,\n            height: size.height,\n        };\n    }\n    getClientRect(config = {}) {\n        const skipTransform = config.skipTransform;\n        const relativeTo = config.relativeTo;\n        const fillRect = this.getSelfRect();\n        const applyStroke = !config.skipStroke && this.hasStroke();\n        const strokeWidth = (applyStroke && this.strokeWidth()) || 0;\n        const fillAndStrokeWidth = fillRect.width + strokeWidth;\n        const fillAndStrokeHeight = fillRect.height + strokeWidth;\n        const applyShadow = !config.skipShadow && this.hasShadow();\n        const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n        const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n        const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n        const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n        const blurRadius = (applyShadow && this.shadowBlur()) || 0;\n        const width = preWidth + blurRadius * 2;\n        const height = preHeight + blurRadius * 2;\n        const rect = {\n            width: width,\n            height: height,\n            x: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetX, 0) +\n                fillRect.x,\n            y: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetY, 0) +\n                fillRect.y,\n        };\n        if (!skipTransform) {\n            return this._transformedRect(rect, relativeTo);\n        }\n        return rect;\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || layer.getCanvas(), context = canvas.getContext(), cachedCanvas = this._getCanvasCache(), drawFunc = this.getSceneFunc(), hasShadow = this.hasShadow(), stage, bufferCanvas, bufferContext;\n        var skipBuffer = canvas.isCache;\n        var cachingSelf = top === this;\n        if (!this.isVisible() && !cachingSelf) {\n            return this;\n        }\n        if (cachedCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        if (this._useBufferCanvas() && !skipBuffer) {\n            stage = this.getStage();\n            bufferCanvas = stage.bufferCanvas;\n            bufferContext = bufferCanvas.getContext();\n            bufferContext.clear();\n            bufferContext.save();\n            bufferContext._applyLineJoin(this);\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n            drawFunc.call(this, bufferContext, this);\n            bufferContext.restore();\n            var ratio = bufferCanvas.pixelRatio;\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n            context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\n        }\n        else {\n            context._applyLineJoin(this);\n            if (!cachingSelf) {\n                var o = this.getAbsoluteTransform(top).getMatrix();\n                context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n                context._applyOpacity(this);\n                context._applyGlobalCompositeOperation(this);\n            }\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            drawFunc.call(this, context, this);\n        }\n        context.restore();\n        return this;\n    }\n    drawHit(can, top, skipDragCheck = false) {\n        if (!this.shouldDrawHit(top, skipDragCheck)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || layer.hitCanvas, context = canvas && canvas.getContext(), drawFunc = this.hitFunc() || this.sceneFunc(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (!this.colorKey) {\n            Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()');\n        }\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        context._applyLineJoin(this);\n        const selfCache = this === top;\n        if (!selfCache) {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n        drawFunc.call(this, context, this);\n        context.restore();\n        return this;\n    }\n    drawHitFromCache(alphaThreshold = 0) {\n        var cachedCanvas = this._getCanvasCache(), sceneCanvas = this._getCachedSceneCanvas(), hitCanvas = cachedCanvas.hit, hitContext = hitCanvas.getContext(), hitWidth = hitCanvas.getWidth(), hitHeight = hitCanvas.getHeight(), hitImageData, hitData, len, rgbColorKey, i, alpha;\n        hitContext.clear();\n        hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n        try {\n            hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n            hitData = hitImageData.data;\n            len = hitData.length;\n            rgbColorKey = Util._hexToRgb(this.colorKey);\n            for (i = 0; i < len; i += 4) {\n                alpha = hitData[i + 3];\n                if (alpha > alphaThreshold) {\n                    hitData[i] = rgbColorKey.r;\n                    hitData[i + 1] = rgbColorKey.g;\n                    hitData[i + 2] = rgbColorKey.b;\n                    hitData[i + 3] = 255;\n                }\n                else {\n                    hitData[i + 3] = 0;\n                }\n            }\n            hitContext.putImageData(hitImageData, 0, 0);\n        }\n        catch (e) {\n            Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n        }\n        return this;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n}\nShape.prototype._fillFunc = _fillFunc;\nShape.prototype._strokeFunc = _strokeFunc;\nShape.prototype._fillFuncHit = _fillFuncHit;\nShape.prototype._strokeFuncHit = _strokeFuncHit;\nShape.prototype._centroid = false;\nShape.prototype.nodeType = 'Shape';\n_registerNode(Shape);\nShape.prototype.eventListeners = {};\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva', _clearFillPatternCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\nFactory.addGetterSetter(Shape, 'stroke', undefined, getStringOrGradientValidator());\nFactory.addGetterSetter(Shape, 'strokeWidth', 2, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\nFactory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', getNumberOrAutoValidator());\nFactory.addGetterSetter(Shape, 'strokeHitEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, 'perfectDrawEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Shape, 'lineJoin');\nFactory.addGetterSetter(Shape, 'lineCap');\nFactory.addGetterSetter(Shape, 'sceneFunc');\nFactory.addGetterSetter(Shape, 'hitFunc');\nFactory.addGetterSetter(Shape, 'dash');\nFactory.addGetterSetter(Shape, 'dashOffset', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'shadowColor', undefined, getStringValidator());\nFactory.addGetterSetter(Shape, 'shadowBlur', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'shadowOpacity', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'shadowOffsetX', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'shadowOffsetY', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternImage');\nFactory.addGetterSetter(Shape, 'fill', undefined, getStringOrGradientValidator());\nFactory.addGetterSetter(Shape, 'fillPatternX', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternY', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\nFactory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\nFactory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\nFactory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\nFactory.addGetterSetter(Shape, 'fillEnabled', true);\nFactory.addGetterSetter(Shape, 'strokeEnabled', true);\nFactory.addGetterSetter(Shape, 'shadowEnabled', true);\nFactory.addGetterSetter(Shape, 'dashEnabled', true);\nFactory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\nFactory.addGetterSetter(Shape, 'fillPriority', 'color');\nFactory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\nFactory.addGetterSetter(Shape, 'fillPatternScaleX', 1, getNumberValidator());\nFactory.addGetterSetter(Shape, 'fillPatternScaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\nFactory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\nFactory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\nFactory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\nFactory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\nFactory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\nFactory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\nFactory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\nFactory.addGetterSetter(Shape, 'fillPatternRotation', 0);\nFactory.backCompat(Shape, {\n    dashArray: 'dash',\n    getDashArray: 'getDash',\n    setDashArray: 'getDash',\n    drawFunc: 'sceneFunc',\n    getDrawFunc: 'getSceneFunc',\n    setDrawFunc: 'setSceneFunc',\n    drawHitFunc: 'hitFunc',\n    getDrawHitFunc: 'getHitFunc',\n    setDrawHitFunc: 'setHitFunc',\n});\n", "import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport class Layer extends Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new SceneCanvas();\n        this.hitCanvas = new HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n    destroy() {\n        Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n        return super.destroy();\n    }\n}\nLayer.prototype.nodeType = 'Layer';\n_registerNode(Layer);\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());\n", "import { Util } from './Util.js';\nimport { Layer } from './Layer.js';\nimport { _registerNode } from './Global.js';\nexport class FastLayer extends Layer {\n    constructor(attrs) {\n        super(attrs);\n        this.listening(false);\n        Util.warn('Konva.Fast layer is deprecated. Please use \"new Konva.Layer({ listening: false })\" instead.');\n    }\n}\nFastLayer.prototype.nodeType = 'FastLayer';\n_registerNode(FastLayer);\n", "import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { _registerNode } from './Global.js';\nexport class Group extends Container {\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to groups.');\n        }\n    }\n}\nGroup.prototype.nodeType = 'Group';\n_registerNode(Group);\n", "import { glob } from './Global.js';\nimport { Util } from './Util.js';\nvar now = (function () {\n    if (glob.performance && glob.performance.now) {\n        return function () {\n            return glob.performance.now();\n        };\n    }\n    return function () {\n        return new Date().getTime();\n    };\n})();\nexport class Animation {\n    constructor(func, layers) {\n        this.id = Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now(),\n            frameRate: 0,\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        var lays = [];\n        if (!layers) {\n            lays = [];\n        }\n        else if (layers.length > 0) {\n            lays = layers;\n        }\n        else {\n            lays = [layers];\n        }\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        var layers = this.layers, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            if (layers[n]._id === layer._id) {\n                return false;\n            }\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        var a = Animation, animations = a.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === this.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = now();\n        Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        var id = anim.id, animations = this.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    }\n    static _runFrames() {\n        var layerHash = {}, animations = this.animations, anim, layers, func, n, i, layersLen, layer, key, needRedraw;\n        for (n = 0; n < animations.length; n++) {\n            anim = animations[n];\n            layers = anim.layers;\n            func = anim.func;\n            anim._updateFrameObject(now());\n            layersLen = layers.length;\n            if (func) {\n                needRedraw = func.call(anim, anim.frame) !== false;\n            }\n            else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (i = 0; i < layersLen; i++) {\n                layer = layers[i];\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n        for (key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        var Anim = Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            Util.requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;\n", "import { Util } from './Util.js';\nimport { Animation } from './Animation.js';\nimport { Node } from './Node.js';\nimport { Konva } from './Global.js';\nvar blacklist = {\n    node: 1,\n    duration: 1,\n    easing: 1,\n    onFinish: 1,\n    yoyo: 1,\n}, PAUSED = 1, PLAYING = 2, REVERSING = 3, idCounter = 0, colorAttrs = ['fill', 'stroke', 'shadowColor'];\nclass TweenEngine {\n    constructor(prop, propFunc, func, begin, finish, duration, yoyo) {\n        this.prop = prop;\n        this.propFunc = propFunc;\n        this.begin = begin;\n        this._pos = begin;\n        this.duration = duration;\n        this._change = 0;\n        this.prevPos = 0;\n        this.yoyo = yoyo;\n        this._time = 0;\n        this._position = 0;\n        this._startTime = 0;\n        this._finish = 0;\n        this.func = func;\n        this._change = finish - this.begin;\n        this.pause();\n    }\n    fire(str) {\n        var handler = this[str];\n        if (handler) {\n            handler();\n        }\n    }\n    setTime(t) {\n        if (t > this.duration) {\n            if (this.yoyo) {\n                this._time = this.duration;\n                this.reverse();\n            }\n            else {\n                this.finish();\n            }\n        }\n        else if (t < 0) {\n            if (this.yoyo) {\n                this._time = 0;\n                this.play();\n            }\n            else {\n                this.reset();\n            }\n        }\n        else {\n            this._time = t;\n            this.update();\n        }\n    }\n    getTime() {\n        return this._time;\n    }\n    setPosition(p) {\n        this.prevPos = this._pos;\n        this.propFunc(p);\n        this._pos = p;\n    }\n    getPosition(t) {\n        if (t === undefined) {\n            t = this._time;\n        }\n        return this.func(t, this.begin, this._change, this.duration);\n    }\n    play() {\n        this.state = PLAYING;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire('onPlay');\n    }\n    reverse() {\n        this.state = REVERSING;\n        this._time = this.duration - this._time;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire('onReverse');\n    }\n    seek(t) {\n        this.pause();\n        this._time = t;\n        this.update();\n        this.fire('onSeek');\n    }\n    reset() {\n        this.pause();\n        this._time = 0;\n        this.update();\n        this.fire('onReset');\n    }\n    finish() {\n        this.pause();\n        this._time = this.duration;\n        this.update();\n        this.fire('onFinish');\n    }\n    update() {\n        this.setPosition(this.getPosition(this._time));\n        this.fire('onUpdate');\n    }\n    onEnterFrame() {\n        var t = this.getTimer() - this._startTime;\n        if (this.state === PLAYING) {\n            this.setTime(t);\n        }\n        else if (this.state === REVERSING) {\n            this.setTime(this.duration - t);\n        }\n    }\n    pause() {\n        this.state = PAUSED;\n        this.fire('onPause');\n    }\n    getTimer() {\n        return new Date().getTime();\n    }\n}\nexport class Tween {\n    constructor(config) {\n        var that = this, node = config.node, nodeId = node._id, duration, easing = config.easing || Easings.Linear, yoyo = !!config.yoyo, key;\n        if (typeof config.duration === 'undefined') {\n            duration = 0.3;\n        }\n        else if (config.duration === 0) {\n            duration = 0.001;\n        }\n        else {\n            duration = config.duration;\n        }\n        this.node = node;\n        this._id = idCounter++;\n        var layers = node.getLayer() ||\n            (node instanceof Konva['Stage'] ? node.getLayers() : null);\n        if (!layers) {\n            Util.error('Tween constructor have `node` that is not in a layer. Please add node into layer first.');\n        }\n        this.anim = new Animation(function () {\n            that.tween.onEnterFrame();\n        }, layers);\n        this.tween = new TweenEngine(key, function (i) {\n            that._tweenFunc(i);\n        }, easing, 0, 1, duration * 1000, yoyo);\n        this._addListeners();\n        if (!Tween.attrs[nodeId]) {\n            Tween.attrs[nodeId] = {};\n        }\n        if (!Tween.attrs[nodeId][this._id]) {\n            Tween.attrs[nodeId][this._id] = {};\n        }\n        if (!Tween.tweens[nodeId]) {\n            Tween.tweens[nodeId] = {};\n        }\n        for (key in config) {\n            if (blacklist[key] === undefined) {\n                this._addAttr(key, config[key]);\n            }\n        }\n        this.reset();\n        this.onFinish = config.onFinish;\n        this.onReset = config.onReset;\n        this.onUpdate = config.onUpdate;\n    }\n    _addAttr(key, end) {\n        var node = this.node, nodeId = node._id, start, diff, tweenId, n, len, trueEnd, trueStart, endRGBA;\n        tweenId = Tween.tweens[nodeId][key];\n        if (tweenId) {\n            delete Tween.attrs[nodeId][tweenId][key];\n        }\n        start = node.getAttr(key);\n        if (Util._isArray(end)) {\n            diff = [];\n            len = Math.max(end.length, start.length);\n            if (key === 'points' && end.length !== start.length) {\n                if (end.length > start.length) {\n                    trueStart = start;\n                    start = Util._prepareArrayForTween(start, end, node.closed());\n                }\n                else {\n                    trueEnd = end;\n                    end = Util._prepareArrayForTween(end, start, node.closed());\n                }\n            }\n            if (key.indexOf('fill') === 0) {\n                for (n = 0; n < len; n++) {\n                    if (n % 2 === 0) {\n                        diff.push(end[n] - start[n]);\n                    }\n                    else {\n                        var startRGBA = Util.colorToRGBA(start[n]);\n                        endRGBA = Util.colorToRGBA(end[n]);\n                        start[n] = startRGBA;\n                        diff.push({\n                            r: endRGBA.r - startRGBA.r,\n                            g: endRGBA.g - startRGBA.g,\n                            b: endRGBA.b - startRGBA.b,\n                            a: endRGBA.a - startRGBA.a,\n                        });\n                    }\n                }\n            }\n            else {\n                for (n = 0; n < len; n++) {\n                    diff.push(end[n] - start[n]);\n                }\n            }\n        }\n        else if (colorAttrs.indexOf(key) !== -1) {\n            start = Util.colorToRGBA(start);\n            endRGBA = Util.colorToRGBA(end);\n            diff = {\n                r: endRGBA.r - start.r,\n                g: endRGBA.g - start.g,\n                b: endRGBA.b - start.b,\n                a: endRGBA.a - start.a,\n            };\n        }\n        else {\n            diff = end - start;\n        }\n        Tween.attrs[nodeId][this._id][key] = {\n            start: start,\n            diff: diff,\n            end: end,\n            trueEnd: trueEnd,\n            trueStart: trueStart,\n        };\n        Tween.tweens[nodeId][key] = this._id;\n    }\n    _tweenFunc(i) {\n        var node = this.node, attrs = Tween.attrs[node._id][this._id], key, attr, start, diff, newVal, n, len, end;\n        for (key in attrs) {\n            attr = attrs[key];\n            start = attr.start;\n            diff = attr.diff;\n            end = attr.end;\n            if (Util._isArray(start)) {\n                newVal = [];\n                len = Math.max(start.length, end.length);\n                if (key.indexOf('fill') === 0) {\n                    for (n = 0; n < len; n++) {\n                        if (n % 2 === 0) {\n                            newVal.push((start[n] || 0) + diff[n] * i);\n                        }\n                        else {\n                            newVal.push('rgba(' +\n                                Math.round(start[n].r + diff[n].r * i) +\n                                ',' +\n                                Math.round(start[n].g + diff[n].g * i) +\n                                ',' +\n                                Math.round(start[n].b + diff[n].b * i) +\n                                ',' +\n                                (start[n].a + diff[n].a * i) +\n                                ')');\n                        }\n                    }\n                }\n                else {\n                    for (n = 0; n < len; n++) {\n                        newVal.push((start[n] || 0) + diff[n] * i);\n                    }\n                }\n            }\n            else if (colorAttrs.indexOf(key) !== -1) {\n                newVal =\n                    'rgba(' +\n                        Math.round(start.r + diff.r * i) +\n                        ',' +\n                        Math.round(start.g + diff.g * i) +\n                        ',' +\n                        Math.round(start.b + diff.b * i) +\n                        ',' +\n                        (start.a + diff.a * i) +\n                        ')';\n            }\n            else {\n                newVal = start + diff * i;\n            }\n            node.setAttr(key, newVal);\n        }\n    }\n    _addListeners() {\n        this.tween.onPlay = () => {\n            this.anim.start();\n        };\n        this.tween.onReverse = () => {\n            this.anim.start();\n        };\n        this.tween.onPause = () => {\n            this.anim.stop();\n        };\n        this.tween.onFinish = () => {\n            var node = this.node;\n            var attrs = Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueEnd) {\n                node.setAttr('points', attrs.points.trueEnd);\n            }\n            if (this.onFinish) {\n                this.onFinish.call(this);\n            }\n        };\n        this.tween.onReset = () => {\n            var node = this.node;\n            var attrs = Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueStart) {\n                node.points(attrs.points.trueStart);\n            }\n            if (this.onReset) {\n                this.onReset();\n            }\n        };\n        this.tween.onUpdate = () => {\n            if (this.onUpdate) {\n                this.onUpdate.call(this);\n            }\n        };\n    }\n    play() {\n        this.tween.play();\n        return this;\n    }\n    reverse() {\n        this.tween.reverse();\n        return this;\n    }\n    reset() {\n        this.tween.reset();\n        return this;\n    }\n    seek(t) {\n        this.tween.seek(t * 1000);\n        return this;\n    }\n    pause() {\n        this.tween.pause();\n        return this;\n    }\n    finish() {\n        this.tween.finish();\n        return this;\n    }\n    destroy() {\n        var nodeId = this.node._id, thisId = this._id, attrs = Tween.tweens[nodeId], key;\n        this.pause();\n        for (key in attrs) {\n            delete Tween.tweens[nodeId][key];\n        }\n        delete Tween.attrs[nodeId][thisId];\n    }\n}\nTween.attrs = {};\nTween.tweens = {};\nNode.prototype.to = function (params) {\n    var onFinish = params.onFinish;\n    params.node = this;\n    params.onFinish = function () {\n        this.destroy();\n        if (onFinish) {\n            onFinish();\n        }\n    };\n    var tween = new Tween(params);\n    tween.play();\n};\nexport const Easings = {\n    BackEaseIn(t, b, c, d) {\n        var s = 1.70158;\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    BackEaseOut(t, b, c, d) {\n        var s = 1.70158;\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    BackEaseInOut(t, b, c, d) {\n        var s = 1.70158;\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n        }\n        return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    },\n    ElasticEaseIn(t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d) === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * 0.3;\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        return (-(a *\n            Math.pow(2, 10 * (t -= 1)) *\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b);\n    },\n    ElasticEaseOut(t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d) === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * 0.3;\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        return (a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) +\n            c +\n            b);\n    },\n    ElasticEaseInOut(t, b, c, d, a, p) {\n        var s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d / 2) === 2) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * (0.3 * 1.5);\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        if (t < 1) {\n            return (-0.5 *\n                (a *\n                    Math.pow(2, 10 * (t -= 1)) *\n                    Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n                b);\n        }\n        return (a *\n            Math.pow(2, -10 * (t -= 1)) *\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n            0.5 +\n            c +\n            b);\n    },\n    BounceEaseOut(t, b, c, d) {\n        if ((t /= d) < 1 / 2.75) {\n            return c * (7.5625 * t * t) + b;\n        }\n        else if (t < 2 / 2.75) {\n            return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n        }\n        else if (t < 2.5 / 2.75) {\n            return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n        }\n        else {\n            return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n        }\n    },\n    BounceEaseIn(t, b, c, d) {\n        return c - Easings.BounceEaseOut(d - t, 0, c, d) + b;\n    },\n    BounceEaseInOut(t, b, c, d) {\n        if (t < d / 2) {\n            return Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n        }\n        else {\n            return Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n        }\n    },\n    EaseIn(t, b, c, d) {\n        return c * (t /= d) * t + b;\n    },\n    EaseOut(t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n    },\n    EaseInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * t * t + b;\n        }\n        return (-c / 2) * (--t * (t - 2) - 1) + b;\n    },\n    StrongEaseIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n    },\n    StrongEaseOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    StrongEaseInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * t * t * t * t * t + b;\n        }\n        return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\n    },\n    Linear(t, b, c, d) {\n        return (c * t) / d + b;\n    },\n};\n", "import { Konva as Global } from './Global.js';\nimport { Util, Transform } from './Util.js';\nimport { Node } from './Node.js';\nimport { Container } from './Container.js';\nimport { Stage, stages } from './Stage.js';\nimport { Layer } from './Layer.js';\nimport { FastLayer } from './FastLayer.js';\nimport { Group } from './Group.js';\nimport { DD } from './DragAndDrop.js';\nimport { Shape, shapes } from './Shape.js';\nimport { Animation } from './Animation.js';\nimport { Tween, Easings } from './Tween.js';\nimport { Context } from './Context.js';\nimport { Canvas } from './Canvas.js';\nexport const Konva = Util._assign(Global, {\n    Util,\n    Transform,\n    Node,\n    Container,\n    Stage,\n    stages,\n    Layer,\n    FastLayer,\n    Group,\n    DD,\n    Shape,\n    shapes,\n    Animation,\n    Tween,\n    Easings,\n    Context,\n    Canvas,\n});\nexport default Konva;\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator, getBooleanValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Arc extends Shape {\n    _sceneFunc(context) {\n        var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), (3 * Math.PI) / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: boundLeft,\n            y: clockwise ? -1 * boundBottom : boundTop,\n            width: boundRight - boundLeft,\n            height: boundBottom - boundTop,\n        };\n    }\n}\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Arc);\nFactory.addGetterSetter(Arc, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'outerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'clockwise', false, getBooleanValidator());\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator, getNumberArrayValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n    var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\n    return [p1x, p1y, p2x, p2y];\n}\nfunction expandPoints(p, tension) {\n    var len = p.length, allPoints = [], n, cp;\n    for (n = 2; n < len - 2; n += 2) {\n        cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n        if (isNaN(cp[0])) {\n            continue;\n        }\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n    }\n    return allPoints;\n}\nexport class Line extends Shape {\n    constructor(config) {\n        super(config);\n        this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n    }\n    _sceneFunc(context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    }\n    getTensionPoints() {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    }\n    _getTensionPoints() {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return expandPoints(this.points(), this.tension());\n        }\n    }\n    _getTensionPointsClosed() {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1],\n        ]);\n        return tp;\n    }\n    getWidth() {\n        return this.getSelfRect().width;\n    }\n    getHeight() {\n        return this.getSelfRect().height;\n    }\n    getSelfRect() {\n        var points = this.points();\n        if (points.length < 4) {\n            return {\n                x: points[0] || 0,\n                y: points[1] || 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (this.tension() !== 0) {\n            points = [\n                points[0],\n                points[1],\n                ...this._getTensionPoints(),\n                points[points.length - 2],\n                points[points.length - 1],\n            ];\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n}\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n_registerNode(Line);\nFactory.addGetterSetter(Line, 'closed', false);\nFactory.addGetterSetter(Line, 'bezier', false);\nFactory.addGetterSetter(Line, 'tension', 0, getNumberValidator());\nFactory.addGetterSetter(Line, 'points', [], getNumberArrayValidator());\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nexport class Path extends Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = 0;\n        for (var i = 0; i < this.dataArray.length; ++i) {\n            this.pathLength += this.dataArray[i].pathLength;\n        }\n        this.on('dataChange.konva', function () {\n            this.dataArray = Path.parsePathData(this.data());\n            this.pathLength = 0;\n            for (var i = 0; i < this.dataArray.length; ++i) {\n                this.pathLength += this.dataArray[i].pathLength;\n            }\n        });\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        var point, i = 0, ii = this.dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > this.dataArray[i].pathLength) {\n            length -= this.dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = this.dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        if (length < 0.01) {\n            point = this.dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        var cp = this.dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) {\n            fromX = P1x;\n        }\n        if (fromY === undefined) {\n            fromY = P1y;\n        }\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\n        if (P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise,\n            };\n        }\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise,\n            };\n        }\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\n            if (P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise,\n            };\n        }\n        return pt;\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A',\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === '00') {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                len = 0.0;\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'Q':\n                len = 0.0;\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n_registerNode(Path);\nFactory.addGetterSetter(Path, 'data');\n", "import { Factory } from '../Factory.js';\nimport { Line } from './Line.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nimport { Path } from './Path.js';\nexport class Arrow extends Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        var PI2 = Math.PI * 2;\n        var points = this.points();\n        var tp = points;\n        var fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) {\n            tp = this.getTensionPoints();\n        }\n        var length = this.pointerLength();\n        var n = points.length;\n        var dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1],\n            ];\n            const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n            const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        }\n        else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        var width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            }\n            else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n    }\n    __fillStroke(ctx) {\n        var isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = true;\n        }\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2,\n        };\n    }\n}\nArrow.prototype.className = 'Arrow';\n_registerNode(Arrow);\nFactory.addGetterSetter(Arrow, 'pointerLength', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerWidth', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory.addGetterSetter(Arrow, 'pointerAtEnding', true);\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Circle extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        if (this.radius() !== width / 2) {\n            this.radius(width / 2);\n        }\n    }\n    setHeight(height) {\n        if (this.radius() !== height / 2) {\n            this.radius(height / 2);\n        }\n    }\n}\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n_registerNode(Circle);\nFactory.addGetterSetter(Circle, 'radius', 0, getNumberValidator());\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Ellipse extends Shape {\n    _sceneFunc(context) {\n        var rx = this.radiusX(), ry = this.radiusY();\n        context.beginPath();\n        context.save();\n        if (rx !== ry) {\n            context.scale(1, ry / rx);\n        }\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\n        context.restore();\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radiusX() * 2;\n    }\n    getHeight() {\n        return this.radiusY() * 2;\n    }\n    setWidth(width) {\n        this.radiusX(width / 2);\n    }\n    setHeight(height) {\n        this.radiusY(height / 2);\n    }\n}\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n_registerNode(Ellipse);\nFactory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory.addGetterSetter(Ellipse, 'radiusX', 0, getNumberValidator());\nFactory.addGetterSetter(Ellipse, 'radiusY', 0, getNumberValidator());\n", "import { Util } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator, } from '../Validators.js';\nexport class Image extends Shape {\n    constructor(attrs) {\n        super(attrs);\n        this.on('imageChange.konva', () => {\n            this._setImageLoad();\n        });\n        this._setImageLoad();\n    }\n    _setImageLoad() {\n        const image = this.image();\n        if (image && image.complete) {\n            return;\n        }\n        if (image && image.readyState === 4) {\n            return;\n        }\n        if (image && image['addEventListener']) {\n            image['addEventListener']('load', () => {\n                this._requestDraw();\n            });\n        }\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _sceneFunc(context) {\n        const width = this.getWidth();\n        const height = this.getHeight();\n        const cornerRadius = this.cornerRadius();\n        const image = this.attrs.image;\n        let params;\n        if (image) {\n            const cropWidth = this.attrs.cropWidth;\n            const cropHeight = this.attrs.cropHeight;\n            if (cropWidth && cropHeight) {\n                params = [\n                    image,\n                    this.cropX(),\n                    this.cropY(),\n                    cropWidth,\n                    cropHeight,\n                    0,\n                    0,\n                    width,\n                    height,\n                ];\n            }\n            else {\n                params = [image, 0, 0, width, height];\n            }\n        }\n        if (this.hasFill() || this.hasStroke() || cornerRadius) {\n            context.beginPath();\n            cornerRadius\n                ? Util.drawRoundedRectPath(context, width, height, cornerRadius)\n                : context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (cornerRadius) {\n                context.clip();\n            }\n            context.drawImage.apply(context, params);\n        }\n    }\n    _hitFunc(context) {\n        var width = this.width(), height = this.height(), cornerRadius = this.cornerRadius();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            Util.drawRoundedRectPath(context, width, height, cornerRadius);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        var _a, _b;\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n    }\n    getHeight() {\n        var _a, _b;\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n    }\n    static fromURL(url, callback, onError = null) {\n        var img = Util.createImageElement();\n        img.onload = function () {\n            var image = new Image({\n                image: img,\n            });\n            callback(image);\n        };\n        img.onerror = onError;\n        img.crossOrigin = 'Anonymous';\n        img.src = url;\n    }\n}\nImage.prototype.className = 'Image';\n_registerNode(Image);\nFactory.addGetterSetter(Image, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\nFactory.addGetterSetter(Image, 'image');\nFactory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Image, 'cropX', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropY', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropHeight', 0, getNumberValidator());\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Group } from '../Group.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator, } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'pointerDirection',\n    'pointerWidth',\n    'pointerHeight',\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\nexport class Label extends Group {\n    constructor(config) {\n        super(config);\n        this.on('add.konva', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find('Text')[0];\n    }\n    getTag() {\n        return this.find('Tag')[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nLabel.prototype.className = 'Label';\n_registerNode(Label);\nexport class Tag extends Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft =\n                topRight =\n                    bottomLeft =\n                        bottomRight =\n                            Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nTag.prototype.className = 'Tag';\n_registerNode(Tag);\nFactory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory.addGetterSetter(Tag, 'pointerWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'pointerHeight', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nimport { Util } from '../Util.js';\nimport { getNumberOrArrayOfNumbersValidator } from '../Validators.js';\nexport class Rect extends Shape {\n    _sceneFunc(context) {\n        var cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            Util.drawRoundedRectPath(context, width, height, cornerRadius);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n}\nRect.prototype.className = 'Rect';\n_registerNode(Rect);\nFactory.addGetterSetter(Rect, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class RegularPolygon extends Shape {\n    _sceneFunc(context) {\n        const points = this._getPoints();\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for (var n = 1; n < points.length; n++) {\n            context.lineTo(points[n].x, points[n].y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    _getPoints() {\n        const sides = this.attrs.sides;\n        const radius = this.attrs.radius || 0;\n        const points = [];\n        for (var n = 0; n < sides; n++) {\n            points.push({\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\n            });\n        }\n        return points;\n    }\n    getSelfRect() {\n        const points = this._getPoints();\n        var minX = points[0].x;\n        var maxX = points[0].y;\n        var minY = points[0].x;\n        var maxY = points[0].y;\n        points.forEach((point) => {\n            minX = Math.min(minX, point.x);\n            maxX = Math.max(maxX, point.x);\n            minY = Math.min(minY, point.y);\n            maxY = Math.max(maxY, point.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n_registerNode(RegularPolygon);\nFactory.addGetterSetter(RegularPolygon, 'radius', 0, getNumberValidator());\nFactory.addGetterSetter(RegularPolygon, 'sides', 0, getNumberValidator());\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar PIx2 = Math.PI * 2;\nexport class Ring extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.innerRadius(), 0, PIx2, false);\n        context.moveTo(this.outerRadius(), 0);\n        context.arc(0, 0, this.outerRadius(), PIx2, 0, true);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nRing.prototype.className = 'Ring';\nRing.prototype._centroid = true;\nRing.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Ring);\nFactory.addGetterSetter(Ring, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Ring, 'outerRadius', 0, getNumberValidator());\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Animation } from '../Animation.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Sprite extends Shape {\n    constructor(config) {\n        super(config);\n        this._updated = true;\n        this.anim = new Animation(() => {\n            var updated = this._updated;\n            this._updated = false;\n            return updated;\n        });\n        this.on('animationChange.konva', function () {\n            this.frameIndex(0);\n        });\n        this.on('frameIndexChange.konva', function () {\n            this._updated = true;\n        });\n        this.on('frameRateChange.konva', function () {\n            if (!this.anim.isRunning()) {\n                return;\n            }\n            clearInterval(this.interval);\n            this._setInterval();\n        });\n    }\n    _sceneFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (offsets) {\n                var offset = offsets[anim], ix2 = index * 2;\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n            }\n            else {\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\n            }\n        }\n    }\n    _hitFunc(context) {\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\n        context.beginPath();\n        if (offsets) {\n            var offset = offsets[anim];\n            var ix2 = index * 2;\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n        }\n        else {\n            context.rect(0, 0, width, height);\n        }\n        context.closePath();\n        context.fillShape(this);\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _setInterval() {\n        var that = this;\n        this.interval = setInterval(function () {\n            that._updateIndex();\n        }, 1000 / this.frameRate());\n    }\n    start() {\n        if (this.isRunning()) {\n            return;\n        }\n        var layer = this.getLayer();\n        this.anim.setLayers(layer);\n        this._setInterval();\n        this.anim.start();\n    }\n    stop() {\n        this.anim.stop();\n        clearInterval(this.interval);\n    }\n    isRunning() {\n        return this.anim.isRunning();\n    }\n    _updateIndex() {\n        var index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\n        if (index < len - 1) {\n            this.frameIndex(index + 1);\n        }\n        else {\n            this.frameIndex(0);\n        }\n    }\n}\nSprite.prototype.className = 'Sprite';\n_registerNode(Sprite);\nFactory.addGetterSetter(Sprite, 'animation');\nFactory.addGetterSetter(Sprite, 'animations');\nFactory.addGetterSetter(Sprite, 'frameOffsets');\nFactory.addGetterSetter(Sprite, 'image');\nFactory.addGetterSetter(Sprite, 'frameIndex', 0, getNumberValidator());\nFactory.addGetterSetter(Sprite, 'frameRate', 17, getNumberValidator());\nFactory.backCompat(Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex',\n});\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Star extends Shape {\n    _sceneFunc(context) {\n        var innerRadius = this.innerRadius(), outerRadius = this.outerRadius(), numPoints = this.numPoints();\n        context.beginPath();\n        context.moveTo(0, 0 - outerRadius);\n        for (var n = 1; n < numPoints * 2; n++) {\n            var radius = n % 2 === 0 ? outerRadius : innerRadius;\n            var x = radius * Math.sin((n * Math.PI) / numPoints);\n            var y = -1 * radius * Math.cos((n * Math.PI) / numPoints);\n            context.lineTo(x, y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nStar.prototype.className = 'Star';\nStar.prototype._centroid = true;\nStar.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Star);\nFactory.addGetterSetter(Star, 'numPoints', 5, getNumberValidator());\nFactory.addGetterSetter(Star, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Star, 'outerRadius', 0, getNumberValidator());\n", "import { Util } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator, getStringValidator, getNumberOrAutoValidator, getBooleanValidator, } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport function stringToArray(string) {\n    return Array.from(string);\n}\nvar AUTO = 'auto', CENTER = 'center', JUSTIFY = 'justify', CHANGE_KONVA = 'Change.konva', CONTEXT_2D = '2d', DASH = '-', LEFT = 'left', TEXT = 'text', TEXT_UPPER = 'Text', TOP = 'top', BOTTOM = 'bottom', MIDDLE = 'middle', NORMAL = 'normal', PX_SPACE = 'px ', SPACE = ' ', RIGHT = 'right', WORD = 'word', CHAR = 'char', NONE = 'none', ELLIPSIS = '\u2026', ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'fontVariant',\n    'padding',\n    'align',\n    'verticalAlign',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'wrap',\n    'ellipsis',\n    'letterSpacing',\n], attrChangeListLen = ATTR_CHANGE_LIST.length;\nfunction normalizeFontFamily(fontFamily) {\n    return fontFamily\n        .split(',')\n        .map((family) => {\n        family = family.trim();\n        const hasSpace = family.indexOf(' ') >= 0;\n        const hasQuotes = family.indexOf('\"') >= 0 || family.indexOf(\"'\") >= 0;\n        if (hasSpace && !hasQuotes) {\n            family = `\"${family}\"`;\n        }\n        return family;\n    })\n        .join(', ');\n}\nvar dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n}\nfunction _fillFunc(context) {\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction _strokeFunc(context) {\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction checkDefaultFill(config) {\n    config = config || {};\n    if (!config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops &&\n        !config.fillPatternImage) {\n        config.fill = config.fill || 'black';\n    }\n    return config;\n}\nexport class Text extends Shape {\n    constructor(config) {\n        super(checkDefaultFill(config));\n        this._partialTextX = 0;\n        this._partialTextY = 0;\n        for (var n = 0; n < attrChangeListLen; n++) {\n            this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n        }\n        this._setTextData();\n    }\n    _sceneFunc(context) {\n        var textArr = this.textArr, textArrLen = textArr.length;\n        if (!this.text()) {\n            return;\n        }\n        var padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, verticalAlign = this.verticalAlign(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf('underline') !== -1, shouldLineThrough = textDecoration.indexOf('line-through') !== -1, n;\n        var translateY = 0;\n        var translateY = lineHeightPx / 2;\n        var lineTranslateX = 0;\n        var lineTranslateY = 0;\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', MIDDLE);\n        context.setAttr('textAlign', LEFT);\n        if (verticalAlign === MIDDLE) {\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n        }\n        else if (verticalAlign === BOTTOM) {\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n        }\n        context.translate(padding, alignY + padding);\n        for (n = 0; n < textArrLen; n++) {\n            var lineTranslateX = 0;\n            var lineTranslateY = 0;\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = obj.lastInParagraph, spacesNumber, oneWord, lineWidth;\n            context.save();\n            if (align === RIGHT) {\n                lineTranslateX += totalWidth - width - padding * 2;\n            }\n            else if (align === CENTER) {\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\n            }\n            if (shouldUnderline) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && !lastLine ? totalWidth - padding * 2 : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\n                context.lineWidth = fontSize / 15;\n                const gradient = this._getLinearGradient();\n                context.strokeStyle = gradient || fill;\n                context.stroke();\n                context.restore();\n            }\n            if (shouldLineThrough) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY);\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\n                context.lineWidth = fontSize / 15;\n                const gradient = this._getLinearGradient();\n                context.strokeStyle = gradient || fill;\n                context.stroke();\n                context.restore();\n            }\n            if (letterSpacing !== 0 || align === JUSTIFY) {\n                spacesNumber = text.split(' ').length - 1;\n                var array = stringToArray(text);\n                for (var li = 0; li < array.length; li++) {\n                    var letter = array[li];\n                    if (letter === ' ' && !lastLine && align === JUSTIFY) {\n                        lineTranslateX += (totalWidth - padding * 2 - width) / spacesNumber;\n                    }\n                    this._partialTextX = lineTranslateX;\n                    this._partialTextY = translateY + lineTranslateY;\n                    this._partialText = letter;\n                    context.fillStrokeShape(this);\n                    lineTranslateX += this.measureSize(letter).width + letterSpacing;\n                }\n            }\n            else {\n                this._partialTextX = lineTranslateX;\n                this._partialTextY = translateY + lineTranslateY;\n                this._partialText = text;\n                context.fillStrokeShape(this);\n            }\n            context.restore();\n            if (textArrLen > 1) {\n                translateY += lineHeightPx;\n            }\n        }\n    }\n    _hitFunc(context) {\n        var width = this.getWidth(), height = this.getHeight();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    setText(text) {\n        var str = Util._isString(text)\n            ? text\n            : text === null || text === undefined\n                ? ''\n                : text + '';\n        this._setAttr(TEXT, str);\n        return this;\n    }\n    getWidth() {\n        var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n    }\n    getHeight() {\n        var isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\n        return isAuto\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\n                this.padding() * 2\n            : this.attrs.height;\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    }\n    measureSize(text) {\n        var _context = getDummyContext(), fontSize = this.fontSize(), metrics;\n        _context.save();\n        _context.font = this._getContextFont();\n        metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: fontSize,\n        };\n    }\n    _getContextFont() {\n        return (this.fontStyle() +\n            SPACE +\n            this.fontVariant() +\n            SPACE +\n            (this.fontSize() + PX_SPACE) +\n            normalizeFontFamily(this.fontFamily()));\n    }\n    _addTextLine(line) {\n        const align = this.align();\n        if (align === JUSTIFY) {\n            line = line.trim();\n        }\n        var width = this._getTextWidth(line);\n        return this.textArr.push({\n            text: line,\n            width: width,\n            lastInParagraph: false,\n        });\n    }\n    _getTextWidth(text) {\n        var letterSpacing = this.letterSpacing();\n        var length = text.length;\n        return (getDummyContext().measureText(text).width +\n            (length ? letterSpacing * (length - 1) : 0));\n    }\n    _setTextData() {\n        var lines = this.text().split('\\n'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis();\n        this.textArr = [];\n        getDummyContext().font = this._getContextFont();\n        var additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\n        for (var i = 0, max = lines.length; i < max; ++i) {\n            var line = lines[i];\n            var lineWidth = this._getTextWidth(line);\n            if (fixedWidth && lineWidth > maxWidth) {\n                while (line.length > 0) {\n                    var low = 0, high = line.length, match = '', matchWidth = 0;\n                    while (low < high) {\n                        var mid = (low + high) >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\n                        if (substrWidth <= maxWidth) {\n                            low = mid + 1;\n                            match = substr;\n                            matchWidth = substrWidth;\n                        }\n                        else {\n                            high = mid;\n                        }\n                    }\n                    if (match) {\n                        if (wrapAtWord) {\n                            var wrapIndex;\n                            var nextChar = line[match.length];\n                            var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                                wrapIndex = match.length;\n                            }\n                            else {\n                                wrapIndex =\n                                    Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\n                                        1;\n                            }\n                            if (wrapIndex > 0) {\n                                low = wrapIndex;\n                                match = match.slice(0, low);\n                                matchWidth = this._getTextWidth(match);\n                            }\n                        }\n                        match = match.trimRight();\n                        this._addTextLine(match);\n                        textWidth = Math.max(textWidth, matchWidth);\n                        currentHeightPx += lineHeightPx;\n                        var shouldHandleEllipsis = this._shouldHandleEllipsis(currentHeightPx);\n                        if (shouldHandleEllipsis) {\n                            this._tryToAddEllipsisToLastLine();\n                            break;\n                        }\n                        line = line.slice(low);\n                        line = line.trimLeft();\n                        if (line.length > 0) {\n                            lineWidth = this._getTextWidth(line);\n                            if (lineWidth <= maxWidth) {\n                                this._addTextLine(line);\n                                currentHeightPx += lineHeightPx;\n                                textWidth = Math.max(textWidth, lineWidth);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                this._addTextLine(line);\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n                if (this._shouldHandleEllipsis(currentHeightPx) && i < max - 1) {\n                    this._tryToAddEllipsisToLastLine();\n                }\n            }\n            if (this.textArr[this.textArr.length - 1]) {\n                this.textArr[this.textArr.length - 1].lastInParagraph = true;\n            }\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n                break;\n            }\n        }\n        this.textHeight = fontSize;\n        this.textWidth = textWidth;\n    }\n    _shouldHandleEllipsis(currentHeightPx) {\n        var fontSize = +this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, height = this.attrs.height, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxHeightPx = height - padding * 2, wrap = this.wrap(), shouldWrap = wrap !== NONE;\n        return (!shouldWrap ||\n            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx));\n    }\n    _tryToAddEllipsisToLastLine() {\n        var width = this.attrs.width, fixedWidth = width !== AUTO && width !== undefined, padding = this.padding(), maxWidth = width - padding * 2, shouldAddEllipsis = this.ellipsis();\n        var lastLine = this.textArr[this.textArr.length - 1];\n        if (!lastLine || !shouldAddEllipsis) {\n            return;\n        }\n        if (fixedWidth) {\n            var haveSpace = this._getTextWidth(lastLine.text + ELLIPSIS) < maxWidth;\n            if (!haveSpace) {\n                lastLine.text = lastLine.text.slice(0, lastLine.text.length - 3);\n            }\n        }\n        this.textArr.splice(this.textArr.length - 1, 1);\n        this._addTextLine(lastLine.text + ELLIPSIS);\n    }\n    getStrokeScaleEnabled() {\n        return true;\n    }\n}\nText.prototype._fillFunc = _fillFunc;\nText.prototype._strokeFunc = _strokeFunc;\nText.prototype.className = TEXT_UPPER;\nText.prototype._attrsAffectingSize = [\n    'text',\n    'fontSize',\n    'padding',\n    'wrap',\n    'lineHeight',\n    'letterSpacing',\n];\n_registerNode(Text);\nFactory.overWriteSetter(Text, 'width', getNumberOrAutoValidator());\nFactory.overWriteSetter(Text, 'height', getNumberOrAutoValidator());\nFactory.addGetterSetter(Text, 'fontFamily', 'Arial');\nFactory.addGetterSetter(Text, 'fontSize', 12, getNumberValidator());\nFactory.addGetterSetter(Text, 'fontStyle', NORMAL);\nFactory.addGetterSetter(Text, 'fontVariant', NORMAL);\nFactory.addGetterSetter(Text, 'padding', 0, getNumberValidator());\nFactory.addGetterSetter(Text, 'align', LEFT);\nFactory.addGetterSetter(Text, 'verticalAlign', TOP);\nFactory.addGetterSetter(Text, 'lineHeight', 1, getNumberValidator());\nFactory.addGetterSetter(Text, 'wrap', WORD);\nFactory.addGetterSetter(Text, 'ellipsis', false, getBooleanValidator());\nFactory.addGetterSetter(Text, 'letterSpacing', 0, getNumberValidator());\nFactory.addGetterSetter(Text, 'text', '', getStringValidator());\nFactory.addGetterSetter(Text, 'textDecoration', '');\n", "import { Util } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Path } from './Path.js';\nimport { Text, stringToArray } from './Text.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar EMPTY_STRING = '', NORMAL = 'normal';\nfunction _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n}\nfunction _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n}\nexport class TextPath extends Shape {\n    constructor(config) {\n        super(config);\n        this.dummyCanvas = Util.createCanvasElement();\n        this.dataArray = [];\n        this.dataArray = Path.parsePathData(this.attrs.data);\n        this.on('dataChange.konva', function () {\n            this.dataArray = Path.parsePathData(this.attrs.data);\n            this._setTextData();\n        });\n        this.on('textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva fontSizeChange.konva fontFamilyChange.konva', this._setTextData);\n        this._setTextData();\n    }\n    _sceneFunc(context) {\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', this.textBaseline());\n        context.setAttr('textAlign', 'left');\n        context.save();\n        var textDecoration = this.textDecoration();\n        var fill = this.fill();\n        var fontSize = this.fontSize();\n        var glyphInfo = this.glyphInfo;\n        if (textDecoration === 'underline') {\n            context.beginPath();\n        }\n        for (var i = 0; i < glyphInfo.length; i++) {\n            context.save();\n            var p0 = glyphInfo[i].p0;\n            context.translate(p0.x, p0.y);\n            context.rotate(glyphInfo[i].rotation);\n            this.partialText = glyphInfo[i].text;\n            context.fillStrokeShape(this);\n            if (textDecoration === 'underline') {\n                if (i === 0) {\n                    context.moveTo(0, fontSize / 2 + 1);\n                }\n                context.lineTo(fontSize, fontSize / 2 + 1);\n            }\n            context.restore();\n        }\n        if (textDecoration === 'underline') {\n            context.strokeStyle = fill;\n            context.lineWidth = fontSize / 20;\n            context.stroke();\n        }\n        context.restore();\n    }\n    _hitFunc(context) {\n        context.beginPath();\n        var glyphInfo = this.glyphInfo;\n        if (glyphInfo.length >= 1) {\n            var p0 = glyphInfo[0].p0;\n            context.moveTo(p0.x, p0.y);\n        }\n        for (var i = 0; i < glyphInfo.length; i++) {\n            var p1 = glyphInfo[i].p1;\n            context.lineTo(p1.x, p1.y);\n        }\n        context.setAttr('lineWidth', this.fontSize());\n        context.setAttr('strokeStyle', this.colorKey);\n        context.stroke();\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    }\n    setText(text) {\n        return Text.prototype.setText.call(this, text);\n    }\n    _getContextFont() {\n        return Text.prototype._getContextFont.call(this);\n    }\n    _getTextSize(text) {\n        var dummyCanvas = this.dummyCanvas;\n        var _context = dummyCanvas.getContext('2d');\n        _context.save();\n        _context.font = this._getContextFont();\n        var metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: parseInt(this.attrs.fontSize, 10),\n        };\n    }\n    _setTextData() {\n        var that = this;\n        var size = this._getTextSize(this.attrs.text);\n        var letterSpacing = this.letterSpacing();\n        var align = this.align();\n        var kerningFunc = this.kerningFunc();\n        this.textWidth = size.width;\n        this.textHeight = size.height;\n        var textFullWidth = Math.max(this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing, 0);\n        this.glyphInfo = [];\n        var fullPathWidth = 0;\n        for (var l = 0; l < that.dataArray.length; l++) {\n            if (that.dataArray[l].pathLength > 0) {\n                fullPathWidth += that.dataArray[l].pathLength;\n            }\n        }\n        var offset = 0;\n        if (align === 'center') {\n            offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);\n        }\n        if (align === 'right') {\n            offset = Math.max(0, fullPathWidth - textFullWidth);\n        }\n        var charArr = stringToArray(this.text());\n        var spacesNumber = this.text().split(' ').length - 1;\n        var p0, p1, pathCmd;\n        var pIndex = -1;\n        var currentT = 0;\n        var getNextPathSegment = function () {\n            currentT = 0;\n            var pathData = that.dataArray;\n            for (var j = pIndex + 1; j < pathData.length; j++) {\n                if (pathData[j].pathLength > 0) {\n                    pIndex = j;\n                    return pathData[j];\n                }\n                else if (pathData[j].command === 'M') {\n                    p0 = {\n                        x: pathData[j].points[0],\n                        y: pathData[j].points[1],\n                    };\n                }\n            }\n            return {};\n        };\n        var findSegmentToFitCharacter = function (c) {\n            var glyphWidth = that._getTextSize(c).width + letterSpacing;\n            if (c === ' ' && align === 'justify') {\n                glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n            }\n            var currLen = 0;\n            var attempts = 0;\n            p1 = undefined;\n            while (Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&\n                attempts < 20) {\n                attempts++;\n                var cumulativePathLength = currLen;\n                while (pathCmd === undefined) {\n                    pathCmd = getNextPathSegment();\n                    if (pathCmd &&\n                        cumulativePathLength + pathCmd.pathLength < glyphWidth) {\n                        cumulativePathLength += pathCmd.pathLength;\n                        pathCmd = undefined;\n                    }\n                }\n                if (Object.keys(pathCmd).length === 0 || p0 === undefined) {\n                    return undefined;\n                }\n                var needNewSegment = false;\n                switch (pathCmd.command) {\n                    case 'L':\n                        if (Path.getLineLength(p0.x, p0.y, pathCmd.points[0], pathCmd.points[1]) > glyphWidth) {\n                            p1 = Path.getPointOnLine(glyphWidth, p0.x, p0.y, pathCmd.points[0], pathCmd.points[1], p0.x, p0.y);\n                        }\n                        else {\n                            pathCmd = undefined;\n                        }\n                        break;\n                    case 'A':\n                        var start = pathCmd.points[4];\n                        var dTheta = pathCmd.points[5];\n                        var end = pathCmd.points[4] + dTheta;\n                        if (currentT === 0) {\n                            currentT = start + 0.00000001;\n                        }\n                        else if (glyphWidth > currLen) {\n                            currentT += ((Math.PI / 180.0) * dTheta) / Math.abs(dTheta);\n                        }\n                        else {\n                            currentT -= ((Math.PI / 360.0) * dTheta) / Math.abs(dTheta);\n                        }\n                        if ((dTheta < 0 && currentT < end) ||\n                            (dTheta >= 0 && currentT > end)) {\n                            currentT = end;\n                            needNewSegment = true;\n                        }\n                        p1 = Path.getPointOnEllipticalArc(pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], currentT, pathCmd.points[6]);\n                        break;\n                    case 'C':\n                        if (currentT === 0) {\n                            if (glyphWidth > pathCmd.pathLength) {\n                                currentT = 0.00000001;\n                            }\n                            else {\n                                currentT = glyphWidth / pathCmd.pathLength;\n                            }\n                        }\n                        else if (glyphWidth > currLen) {\n                            currentT += (glyphWidth - currLen) / pathCmd.pathLength / 2;\n                        }\n                        else {\n                            currentT = Math.max(currentT - (currLen - glyphWidth) / pathCmd.pathLength / 2, 0);\n                        }\n                        if (currentT > 1.0) {\n                            currentT = 1.0;\n                            needNewSegment = true;\n                        }\n                        p1 = Path.getPointOnCubicBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], pathCmd.points[4], pathCmd.points[5]);\n                        break;\n                    case 'Q':\n                        if (currentT === 0) {\n                            currentT = glyphWidth / pathCmd.pathLength;\n                        }\n                        else if (glyphWidth > currLen) {\n                            currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n                        }\n                        else {\n                            currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n                        }\n                        if (currentT > 1.0) {\n                            currentT = 1.0;\n                            needNewSegment = true;\n                        }\n                        p1 = Path.getPointOnQuadraticBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3]);\n                        break;\n                }\n                if (p1 !== undefined) {\n                    currLen = Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n                }\n                if (needNewSegment) {\n                    needNewSegment = false;\n                    pathCmd = undefined;\n                }\n            }\n        };\n        var testChar = 'C';\n        var glyphWidth = that._getTextSize(testChar).width + letterSpacing;\n        var lettersInOffset = offset / glyphWidth - 1;\n        for (var k = 0; k < lettersInOffset; k++) {\n            findSegmentToFitCharacter(testChar);\n            if (p0 === undefined || p1 === undefined) {\n                break;\n            }\n            p0 = p1;\n        }\n        for (var i = 0; i < charArr.length; i++) {\n            findSegmentToFitCharacter(charArr[i]);\n            if (p0 === undefined || p1 === undefined) {\n                break;\n            }\n            var width = Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n            var kern = 0;\n            if (kerningFunc) {\n                try {\n                    kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\n                }\n                catch (e) {\n                    kern = 0;\n                }\n            }\n            p0.x += kern;\n            p1.x += kern;\n            this.textWidth += kern;\n            var midpoint = Path.getPointOnLine(kern + width / 2.0, p0.x, p0.y, p1.x, p1.y);\n            var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);\n            this.glyphInfo.push({\n                transposeX: midpoint.x,\n                transposeY: midpoint.y,\n                text: charArr[i],\n                rotation: rotation,\n                p0: p0,\n                p1: p1,\n            });\n            p0 = p1;\n        }\n    }\n    getSelfRect() {\n        if (!this.glyphInfo.length) {\n            return {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        var points = [];\n        this.glyphInfo.forEach(function (info) {\n            points.push(info.p0.x);\n            points.push(info.p0.y);\n            points.push(info.p1.x);\n            points.push(info.p1.y);\n        });\n        var minX = points[0] || 0;\n        var maxX = points[0] || 0;\n        var minY = points[1] || 0;\n        var maxY = points[1] || 0;\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        var fontSize = this.fontSize();\n        return {\n            x: minX - fontSize / 2,\n            y: minY - fontSize / 2,\n            width: maxX - minX + fontSize,\n            height: maxY - minY + fontSize,\n        };\n    }\n    destroy() {\n        Util.releaseCanvas(this.dummyCanvas);\n        return super.destroy();\n    }\n}\nTextPath.prototype._fillFunc = _fillFunc;\nTextPath.prototype._strokeFunc = _strokeFunc;\nTextPath.prototype._fillFuncHit = _fillFunc;\nTextPath.prototype._strokeFuncHit = _strokeFunc;\nTextPath.prototype.className = 'TextPath';\nTextPath.prototype._attrsAffectingSize = ['text', 'fontSize', 'data'];\n_registerNode(TextPath);\nFactory.addGetterSetter(TextPath, 'data');\nFactory.addGetterSetter(TextPath, 'fontFamily', 'Arial');\nFactory.addGetterSetter(TextPath, 'fontSize', 12, getNumberValidator());\nFactory.addGetterSetter(TextPath, 'fontStyle', NORMAL);\nFactory.addGetterSetter(TextPath, 'align', 'left');\nFactory.addGetterSetter(TextPath, 'letterSpacing', 0, getNumberValidator());\nFactory.addGetterSetter(TextPath, 'textBaseline', 'middle');\nFactory.addGetterSetter(TextPath, 'fontVariant', NORMAL);\nFactory.addGetterSetter(TextPath, 'text', EMPTY_STRING);\nFactory.addGetterSetter(TextPath, 'textDecoration', null);\nFactory.addGetterSetter(TextPath, 'kerningFunc', null);\n", "import { Util, Transform } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Shape } from '../Shape.js';\nimport { Rect } from './Rect.js';\nimport { Group } from '../Group.js';\nimport { Konva } from '../Global.js';\nimport { getBooleanValidator, getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n]\n    .map((e) => e + `.${EVENTS_NAME}`)\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n];\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nconst TOUCH_DEVICE = 'ontouchstart' in Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util.degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util.radToDeg(rad) % 360) + 360) % 360;\n    if (Util._inRange(angle, 315 + 22.5, 360) || Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    const x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    const y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return Object.assign(Object.assign({}, shape), { rotation: shape.rotation + angleRad, x,\n        y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    const center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    let snapped = newRotationRad;\n    for (let i = 0; i < snaps.length; i++) {\n        const angle = Konva.getAngle(snaps[i]);\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nexport class Transformer extends Group {\n    constructor(config) {\n        super(config);\n        this._transforming = false;\n        this._createElements();\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this.update = this.update.bind(this);\n        this.on(ATTR_CHANGE_LIST, this.update);\n        if (this.getNode()) {\n            this.update();\n        }\n    }\n    attachTo(node) {\n        this.setNode(node);\n        return this;\n    }\n    setNode(node) {\n        Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    }\n    getNode() {\n        return this._nodes && this._nodes[0];\n    }\n    _getEventNamespace() {\n        return EVENTS_NAME + this._id;\n    }\n    setNodes(nodes = []) {\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        this._nodes = nodes;\n        if (nodes.length === 1 && this.useSingleNodeRotation()) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach((node) => {\n            const onChange = () => {\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n                    this.rotation(this.nodes()[0].getAbsoluteRotation());\n                }\n                this._resetTransformCache();\n                if (!this._transforming && !this.isDragging()) {\n                    this.update();\n                }\n            };\n            const additionalEvents = node._attrsAffectingSize\n                .map((prop) => prop + 'Change.' + this._getEventNamespace())\n                .join(' ');\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR.map((e) => e + `.${this._getEventNamespace()}`).join(' '), onChange);\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n            this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    }\n    _proxyDrag(node) {\n        let lastPos;\n        node.on(`dragstart.${this._getEventNamespace()}`, (e) => {\n            lastPos = node.getAbsolutePosition();\n            if (!this.isDragging() && node !== this.findOne('.back')) {\n                this.startDrag(e, false);\n            }\n        });\n        node.on(`dragmove.${this._getEventNamespace()}`, (e) => {\n            if (!lastPos) {\n                return;\n            }\n            const abs = node.getAbsolutePosition();\n            const dx = abs.x - lastPos.x;\n            const dy = abs.y - lastPos.y;\n            this.nodes().forEach((otherNode) => {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                const otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    }\n    getNodes() {\n        return this._nodes || [];\n    }\n    getActiveAnchor() {\n        return this._movingAnchorName;\n    }\n    detach() {\n        if (this._nodes) {\n            this._nodes.forEach((node) => {\n                node.off('.' + this._getEventNamespace());\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    }\n    _resetTransformCache() {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    }\n    _getNodeRect() {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n    __getNodeShape(node, rot = this.rotation(), relative) {\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        const rotation = (Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        const box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    }\n    __getNodeRect() {\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        const totalPoints = [];\n        this.nodes().map((node) => {\n            const box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        const tr = new Transform();\n        tr.rotate(-Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        const p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Konva.getAngle(this.rotation()),\n        };\n    }\n    getX() {\n        return this._getNodeRect().x;\n    }\n    getY() {\n        return this._getNodeRect().y;\n    }\n    getWidth() {\n        return this._getNodeRect().width;\n    }\n    getHeight() {\n        return this._getNodeRect().height;\n    }\n    _createElements() {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    }\n    _createAnchor(name) {\n        var anchor = new Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', (e) => {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', () => {\n            var rad = Konva.getAngle(this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = cursor);\n            this._cursorChange = true;\n        });\n        anchor.on('mouseout', () => {\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = '');\n            this._cursorChange = false;\n        });\n        this.add(anchor);\n    }\n    _createBack() {\n        var back = new Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc(ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: (ctx, shape) => {\n                if (!this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on('dragstart', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragmove', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        this.on('dragmove', (e) => {\n            this.update();\n        });\n    }\n    _handleMouseDown(e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mousemove', this._handleMouseMove);\n            window.addEventListener('touchmove', this._handleMouseMove);\n            window.addEventListener('mouseup', this._handleMouseUp, true);\n            window.addEventListener('touchend', this._handleMouseUp, true);\n        }\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire('transformstart', { evt: e.evt, target: this.getNode() });\n        this._nodes.forEach((target) => {\n            target._fire('transformstart', { evt: e.evt, target });\n        });\n    }\n    _handleMouseMove(e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        const pp = stage.getPointerPosition();\n        let newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        const oldAbs = anchorNode.getAbsolutePosition();\n        if (this.anchorDragBoundFunc()) {\n            newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n        }\n        anchorNode.setAbsolutePosition(newNodePos);\n        const newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Konva.getAngle(this.rotation());\n            const newRotation = oldRotation + delta;\n            const tol = Konva.getAngle(this.rotationSnapTolerance());\n            const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            const diff = snappedRot - attrs.rotation;\n            const shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var keepProportion = this.keepRatio() || e.shiftKey;\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Konva.getAngle(this.rotation()),\n        }, e);\n    }\n    _handleMouseUp(e) {\n        this._removeEvents(e);\n    }\n    getAbsoluteTransform() {\n        return this.getTransform();\n    }\n    _removeEvents(e) {\n        if (this._transforming) {\n            this._transforming = false;\n            if (typeof window !== 'undefined') {\n                window.removeEventListener('mousemove', this._handleMouseMove);\n                window.removeEventListener('touchmove', this._handleMouseMove);\n                window.removeEventListener('mouseup', this._handleMouseUp, true);\n                window.removeEventListener('touchend', this._handleMouseUp, true);\n            }\n            var node = this.getNode();\n            this._fire('transformend', { evt: e, target: node });\n            if (node) {\n                this._nodes.forEach((target) => {\n                    target._fire('transformend', { evt: e, target });\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    }\n    _fitNodesInto(newAttrs, evt) {\n        var oldAttrs = this._getNodeRect();\n        const minSize = 1;\n        if (Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        const allowNegativeScale = this.flipEnabled();\n        var t = new Transform();\n        t.rotate(Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            const offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            const offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        const baseSize = 10000000;\n        const oldTr = new Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        const newTr = new Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        const delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach((node) => {\n            var _a;\n            const parentTransform = node.getParent().getAbsoluteTransform();\n            const localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            const newLocalTransform = new Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            const attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    }\n    forceUpdate() {\n        this._resetTransformCache();\n        this.update();\n    }\n    _batchChangeChild(selector, attrs) {\n        const anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    }\n    update() {\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation(Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        this.find('._anchor').forEach((node) => {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: this.anchorStroke(),\n                strokeWidth: this.anchorStrokeWidth(),\n                fill: this.anchorFill(),\n                cornerRadius: this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n    isTransforming() {\n        return this._transforming;\n    }\n    stopTransform() {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    }\n    destroy() {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content && (this.getStage().content.style.cursor = '');\n        }\n        Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    }\n    toObject() {\n        return Node.prototype.toObject.call(this);\n    }\n    clone(obj) {\n        var node = Node.prototype.clone.call(this, obj);\n        return node;\n    }\n    getClientRect() {\n        if (this.nodes().length > 0) {\n            return super.getClientRect();\n        }\n        else {\n            return { x: 0, y: 0, width: 0, height: 0 };\n        }\n    }\n}\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n_registerNode(Transformer);\nFactory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory.addGetterSetter(Transformer, 'flipEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory.addGetterSetter(Transformer, 'anchorSize', 10, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderDash');\nFactory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory.addGetterSetter(Transformer, 'padding', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'node');\nFactory.addGetterSetter(Transformer, 'nodes');\nFactory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\n", "import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Wedge extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.radius(), 0, Konva.getAngle(this.angle()), this.clockwise());\n        context.lineTo(0, 0);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nWedge.prototype.className = 'Wedge';\nWedge.prototype._centroid = true;\nWedge.prototype._attrsAffectingSize = ['radius'];\n_registerNode(Wedge);\nFactory.addGetterSetter(Wedge, 'radius', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Wedge, 'clockwise', false);\nFactory.backCompat(Wedge, {\n    angleDeg: 'angle',\n    getAngleDeg: 'getAngle',\n    setAngleDeg: 'setAngle',\n});\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nfunction BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n}\nvar mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259,\n];\nvar shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n];\nfunction filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data, width = imageData.width, height = imageData.height;\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n    var div = radius + radius + 1, widthMinus1 = width - 1, heightMinus1 = height - 1, radiusPlus1 = radius + 1, sumFactor = (radiusPlus1 * (radiusPlus1 + 1)) / 2, stackStart = new BlurStack(), stackEnd = null, stack = stackStart, stackIn = null, stackOut = null, mul_sum = mul_table[radius], shg_sum = shg_table[radius];\n    for (i = 1; i < div; i++) {\n        stack = stack.next = new BlurStack();\n        if (i === radiusPlus1) {\n            stackEnd = stack;\n        }\n    }\n    stack.next = stackStart;\n    yw = yi = 0;\n    for (y = 0; y < height; y++) {\n        r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        for (i = 1; i < radiusPlus1; i++) {\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n        }\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (x = 0; x < width; x++) {\n            pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa !== 0) {\n                pa = 255 / pa;\n                pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n            r_in_sum += stackIn.r = pixels[p];\n            g_in_sum += stackIn.g = pixels[p + 1];\n            b_in_sum += stackIn.b = pixels[p + 2];\n            a_in_sum += stackIn.a = pixels[p + 3];\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n            a_sum += a_in_sum;\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += 4;\n        }\n        yw += width;\n    }\n    for (x = 0; x < width; x++) {\n        g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        yp = width;\n        for (i = 1; i <= radius; i++) {\n            yi = (yp + x) << 2;\n            r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n            if (i < heightMinus1) {\n                yp += width;\n            }\n        }\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (y = 0; y < height; y++) {\n            p = yi << 2;\n            pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa > 0) {\n                pa = 255 / pa;\n                pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p =\n                (x +\n                    ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width) <<\n                    2;\n            r_sum += r_in_sum += stackIn.r = pixels[p];\n            g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n            b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n            a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += width;\n        }\n    }\n}\nexport const Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n    if (radius > 0) {\n        filterGaussBlurRGBA(imageData, radius);\n    }\n};\nFactory.addGetterSetter(Node, 'blurRadius', 0, getNumberValidator(), Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Brighten = function (imageData) {\n    var brightness = this.brightness() * 255, data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n    }\n};\nFactory.addGetterSetter(Node, 'brightness', 0, getNumberValidator(), Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Contrast = function (imageData) {\n    var adjust = Math.pow((this.contrast() + 100) / 100, 2);\n    var data = imageData.data, nPixels = data.length, red = 150, green = 150, blue = 150, i;\n    for (i = 0; i < nPixels; i += 4) {\n        red = data[i];\n        green = data[i + 1];\n        blue = data[i + 2];\n        red /= 255;\n        red -= 0.5;\n        red *= adjust;\n        red += 0.5;\n        red *= 255;\n        green /= 255;\n        green -= 0.5;\n        green *= adjust;\n        green += 0.5;\n        green *= 255;\n        blue /= 255;\n        blue -= 0.5;\n        blue *= adjust;\n        blue += 0.5;\n        blue *= 255;\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n        data[i] = red;\n        data[i + 1] = green;\n        data[i + 2] = blue;\n    }\n};\nFactory.addGetterSetter(Node, 'contrast', 0, getNumberValidator(), Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Util } from '../Util.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Emboss = function (imageData) {\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    switch (direction) {\n        case 'top-left':\n            dirY = -1;\n            dirX = -1;\n            break;\n        case 'top':\n            dirY = -1;\n            dirX = 0;\n            break;\n        case 'top-right':\n            dirY = -1;\n            dirX = 1;\n            break;\n        case 'right':\n            dirY = 0;\n            dirX = 1;\n            break;\n        case 'bottom-right':\n            dirY = 1;\n            dirX = 1;\n            break;\n        case 'bottom':\n            dirY = 1;\n            dirX = 0;\n            break;\n        case 'bottom-left':\n            dirY = 1;\n            dirX = -1;\n            break;\n        case 'left':\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            Util.error('Unknown emboss direction: ' + direction);\n    }\n    do {\n        var offsetY = (y - 1) * w4;\n        var otherY = dirY;\n        if (y + otherY < 1) {\n            otherY = 0;\n        }\n        if (y + otherY > h) {\n            otherY = 0;\n        }\n        var offsetYOther = (y - 1 + otherY) * w * 4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var otherX = dirX;\n            if (x + otherX < 1) {\n                otherX = 0;\n            }\n            if (x + otherX > w) {\n                otherX = 0;\n            }\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            var dR = data[offset] - data[offsetOther];\n            var dG = data[offset + 1] - data[offsetOther + 1];\n            var dB = data[offset + 2] - data[offsetOther + 2];\n            var dif = dR;\n            var absDif = dif > 0 ? dif : -dif;\n            var absG = dG > 0 ? dG : -dG;\n            var absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) {\n                dif = dG;\n            }\n            if (absB > absDif) {\n                dif = dB;\n            }\n            dif *= strength;\n            if (blend) {\n                var r = data[offset] + dif;\n                var g = data[offset + 1] + dif;\n                var b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            }\n            else {\n                var grey = greyLevel - dif;\n                if (grey < 0) {\n                    grey = 0;\n                }\n                else if (grey > 255) {\n                    grey = 255;\n                }\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        } while (--x);\n    } while (--y);\n};\nFactory.addGetterSetter(Node, 'embossStrength', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossWhiteLevel', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossDirection', 'top-left', null, Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossBlend', false, null, Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) {\n        return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n        return toMin;\n    }\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nexport const Enhance = function (imageData) {\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n        return;\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        r = data[i + 0];\n        if (r < rMin) {\n            rMin = r;\n        }\n        else if (r > rMax) {\n            rMax = r;\n        }\n        g = data[i + 1];\n        if (g < gMin) {\n            gMin = g;\n        }\n        else if (g > gMax) {\n            gMax = g;\n        }\n        b = data[i + 2];\n        if (b < bMin) {\n            bMin = b;\n        }\n        else if (b > bMax) {\n            bMax = b;\n        }\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    }\n    else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\nFactory.addGetterSetter(Node, 'enhance', 0, getNumberValidator(), Factory.afterSetFilter);\n", "export const Grayscale = function (imageData) {\n    var data = imageData.data, len = data.length, i, brightness;\n    for (i = 0; i < len; i += 4) {\n        brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n        data[i] = brightness;\n        data[i + 1] = brightness;\n        data[i + 2] = brightness;\n    }\n};\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nFactory.addGetterSetter(Node, 'hue', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'saturation', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'luminance', 0, getNumberValidator(), Factory.afterSetFilter);\nexport const HSL = function (imageData) {\n    var data = imageData.data, nPixels = data.length, v = 1, s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, l = this.luminance() * 127, i;\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b + l;\n        data[i + 1] = gr * r + gg * g + gb * b + l;\n        data[i + 2] = br * r + bg * g + bb * b + l;\n        data[i + 3] = a;\n    }\n};\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const HSV = function (imageData) {\n    var data = imageData.data, nPixels = data.length, v = Math.pow(2, this.value()), s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, i;\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b;\n        data[i + 1] = gr * r + gg * g + gb * b;\n        data[i + 2] = br * r + bg * g + bb * b;\n        data[i + 3] = a;\n    }\n};\nFactory.addGetterSetter(Node, 'hue', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'saturation', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'value', 0, getNumberValidator(), Factory.afterSetFilter);\n", "export const Invert = function (imageData) {\n    var data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n    }\n};\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Util } from '../Util.js';\nimport { getNumberValidator } from '../Validators.js';\nvar ToPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta;\n    var conversion = ((360 / tSize) * Math.PI) / 180, sin, cos;\n    for (theta = 0; theta < tSize; theta += 1) {\n        sin = Math.sin(theta * conversion);\n        cos = Math.cos(theta * conversion);\n        for (radius = 0; radius < rSize; radius += 1) {\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\n            i = (y * xSize + x) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (theta + radius * xSize) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nvar FromPolar = function (src, dst, opt) {\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    var rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\n    var x1, y1;\n    for (x = 0; x < xSize; x += 1) {\n        for (y = 0; y < ySize; y += 1) {\n            dx = x - xMid;\n            dy = y - yMid;\n            radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\n            theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\n            theta = (theta * tSize) / 360;\n            x1 = Math.floor(theta);\n            y1 = Math.floor(radius);\n            i = (y1 * xSize + x1) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (y * xSize + x) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nexport const Kaleidoscope = function (imageData) {\n    var xSize = imageData.width, ySize = imageData.height;\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor((xSize * (angle % 360)) / 360);\n    if (power < 1) {\n        return;\n    }\n    var tempCanvas = Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas\n        .getContext('2d')\n        .getImageData(0, 0, xSize, ySize);\n    Util.releaseCanvas(tempCanvas);\n    ToPolar(imageData, scratchData, {\n        polarCenterX: xSize / 2,\n        polarCenterY: ySize / 2,\n    });\n    var minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n        minSectionSize = minSectionSize * 2;\n        power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n    var xStart = 0, xEnd = sectionSize, xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n        xStart = sectionSize;\n        xEnd = 0;\n        xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n        for (x = xStart; x !== xEnd; x += xDelta) {\n            xoff = Math.round(x + offset) % xSize;\n            srcPos = (xSize * y + xoff) * 4;\n            r = scratchData.data[srcPos + 0];\n            g = scratchData.data[srcPos + 1];\n            b = scratchData.data[srcPos + 2];\n            a = scratchData.data[srcPos + 3];\n            dstPos = (xSize * y + x) * 4;\n            scratchData.data[dstPos + 0] = r;\n            scratchData.data[dstPos + 1] = g;\n            scratchData.data[dstPos + 2] = b;\n            scratchData.data[dstPos + 3] = a;\n        }\n    }\n    for (y = 0; y < ySize; y += 1) {\n        sectionSize = Math.floor(minSectionSize);\n        for (i = 0; i < power; i += 1) {\n            for (x = 0; x < sectionSize + 1; x += 1) {\n                srcPos = (xSize * y + x) * 4;\n                r = scratchData.data[srcPos + 0];\n                g = scratchData.data[srcPos + 1];\n                b = scratchData.data[srcPos + 2];\n                a = scratchData.data[srcPos + 3];\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n                scratchData.data[dstPos + 0] = r;\n                scratchData.data[dstPos + 1] = g;\n                scratchData.data[dstPos + 2] = b;\n                scratchData.data[dstPos + 3] = a;\n            }\n            sectionSize *= 2;\n        }\n    }\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n};\nFactory.addGetterSetter(Node, 'kaleidoscopePower', 2, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'kaleidoscopeAngle', 0, getNumberValidator(), Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2],\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nexport const Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nFactory.addGetterSetter(Node, 'threshold', 0, getNumberValidator(), Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Noise = function (imageData) {\n    var amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2, i;\n    for (i = 0; i < nPixels; i += 4) {\n        data[i + 0] += half - 2 * half * Math.random();\n        data[i + 1] += half - 2 * half * Math.random();\n        data[i + 2] += half - 2 * half * Math.random();\n    }\n};\nFactory.addGetterSetter(Node, 'noise', 0.2, getNumberValidator(), Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Util } from '../Util.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Pixelate = function (imageData) {\n    var pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\n    if (pixelSize <= 0) {\n        Util.error('pixelSize value can not be <= 0');\n        return;\n    }\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\n        for (yBin = 0; yBin < nBinsY; yBin += 1) {\n            red = 0;\n            green = 0;\n            blue = 0;\n            alpha = 0;\n            xBinStart = xBin * pixelSize;\n            xBinEnd = xBinStart + pixelSize;\n            yBinStart = yBin * pixelSize;\n            yBinEnd = yBinStart + pixelSize;\n            pixelsInBin = 0;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    red += data[i + 0];\n                    green += data[i + 1];\n                    blue += data[i + 2];\n                    alpha += data[i + 3];\n                    pixelsInBin += 1;\n                }\n            }\n            red = red / pixelsInBin;\n            green = green / pixelsInBin;\n            blue = blue / pixelsInBin;\n            alpha = alpha / pixelsInBin;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    data[i + 0] = red;\n                    data[i + 1] = green;\n                    data[i + 2] = blue;\n                    data[i + 3] = alpha;\n                }\n            }\n        }\n    }\n};\nFactory.addGetterSetter(Node, 'pixelSize', 8, getNumberValidator(), Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Posterize = function (imageData) {\n    var levels = Math.round(this.levels() * 254) + 1, data = imageData.data, len = data.length, scale = 255 / levels, i;\n    for (i = 0; i < len; i += 1) {\n        data[i] = Math.floor(data[i] / scale) * scale;\n    }\n};\nFactory.addGetterSetter(Node, 'levels', 0.5, getNumberValidator(), Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { RGBComponent } from '../Validators.js';\nexport const RGB = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\n    for (i = 0; i < nPixels; i += 4) {\n        brightness =\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n        data[i] = brightness * red;\n        data[i + 1] = brightness * green;\n        data[i + 2] = brightness * blue;\n        data[i + 3] = data[i + 3];\n    }\n};\nFactory.addGetterSetter(Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, 'blue', 0, RGBComponent, Factory.afterSetFilter);\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { RGBComponent } from '../Validators.js';\nexport const RGBA = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\n    for (i = 0; i < nPixels; i += 4) {\n        ia = 1 - alpha;\n        data[i] = red * alpha + data[i] * ia;\n        data[i + 1] = green * alpha + data[i + 1] * ia;\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\n    }\n};\nFactory.addGetterSetter(Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory.addGetterSetter(Node, 'blue', 0, RGBComponent, Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'alpha', 1, function (val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return val;\n    }\n});\n", "export const Sepia = function (imageData) {\n    var data = imageData.data, nPixels = data.length, i, r, g, b;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        data[i + 0] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);\n        data[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);\n        data[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);\n    }\n};\n", "export const Solarize = function (imageData) {\n    var data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    do {\n        var offsetY = (y - 1) * w4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var r = data[offset];\n            var g = data[offset + 1];\n            var b = data[offset + 2];\n            if (r > 127) {\n                r = 255 - r;\n            }\n            if (g > 127) {\n                g = 255 - g;\n            }\n            if (b > 127) {\n                b = 255 - b;\n            }\n            data[offset] = r;\n            data[offset + 1] = g;\n            data[offset + 2] = b;\n        } while (--x);\n    } while (--y);\n};\n", "import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Threshold = function (imageData) {\n    var level = this.threshold() * 255, data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 1) {\n        data[i] = data[i] < level ? 0 : 255;\n    }\n};\nFactory.addGetterSetter(Node, 'threshold', 0.5, getNumberValidator(), Factory.afterSetFilter);\n", "import { Konva as Core } from './_CoreInternals.js';\nimport { Arc } from './shapes/Arc.js';\nimport { Arrow } from './shapes/Arrow.js';\nimport { Circle } from './shapes/Circle.js';\nimport { Ellipse } from './shapes/Ellipse.js';\nimport { Image } from './shapes/Image.js';\nimport { Label, Tag } from './shapes/Label.js';\nimport { Line } from './shapes/Line.js';\nimport { Path } from './shapes/Path.js';\nimport { Rect } from './shapes/Rect.js';\nimport { RegularPolygon } from './shapes/RegularPolygon.js';\nimport { Ring } from './shapes/Ring.js';\nimport { Sprite } from './shapes/Sprite.js';\nimport { Star } from './shapes/Star.js';\nimport { Text } from './shapes/Text.js';\nimport { TextPath } from './shapes/TextPath.js';\nimport { Transformer } from './shapes/Transformer.js';\nimport { Wedge } from './shapes/Wedge.js';\nimport { Blur } from './filters/Blur.js';\nimport { Brighten } from './filters/Brighten.js';\nimport { Contrast } from './filters/Contrast.js';\nimport { Emboss } from './filters/Emboss.js';\nimport { Enhance } from './filters/Enhance.js';\nimport { Grayscale } from './filters/Grayscale.js';\nimport { HSL } from './filters/HSL.js';\nimport { HSV } from './filters/HSV.js';\nimport { Invert } from './filters/Invert.js';\nimport { Kaleidoscope } from './filters/Kaleidoscope.js';\nimport { Mask } from './filters/Mask.js';\nimport { Noise } from './filters/Noise.js';\nimport { Pixelate } from './filters/Pixelate.js';\nimport { Posterize } from './filters/Posterize.js';\nimport { RGB } from './filters/RGB.js';\nimport { RGBA } from './filters/RGBA.js';\nimport { Sepia } from './filters/Sepia.js';\nimport { Solarize } from './filters/Solarize.js';\nimport { Threshold } from './filters/Threshold.js';\nexport const Konva = Core.Util._assign(Core, {\n    Arc,\n    Arrow,\n    Circle,\n    Ellipse,\n    Image,\n    Label,\n    Tag,\n    Line,\n    Path,\n    Rect,\n    RegularPolygon,\n    Ring,\n    Sprite,\n    Star,\n    Text,\n    TextPath,\n    Transformer,\n    Wedge,\n    Filters: {\n        Blur,\n        Brighten,\n        Contrast,\n        Emboss,\n        Enhance,\n        Grayscale,\n        HSL,\n        HSV,\n        Invert,\n        Kaleidoscope,\n        Mask,\n        Noise,\n        Pixelate,\n        Posterize,\n        RGB,\n        RGBA,\n        Sepia,\n        Solarize,\n        Threshold,\n    },\n});\n", "import { Konva } from './_FullInternals.js';\nexport default Konva;\n"],
  "mappings": "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",
  "names": ["Konva", "component", "pos", "SET", "transformsEnabled", "shapes", "STAGE", "MOUSELEAVE", "MOUSEENTER", "HASH", "idCounter", "Konva", "i", "v", "u", "CHANGE_KONVA", "LEFT", "SPACE", "RIGHT", "NONE", "ATTR_CHANGE_LIST", "attrChangeListLen", "dummyContext", "getDummyContext", "_fillFunc", "_strokeFunc", "EMPTY_STRING", "NORMAL", "_fillFunc", "_strokeFunc", "glyphWidth", "ATTR_CHANGE_LIST", "TRANSFORM_CHANGE_STR", "node", "self", "Blur", "Konva", "Konva"]
}
