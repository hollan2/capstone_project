What languages are required for the project/ What’s the tech stack?


Short description of what the project is
This project is a device and app that will enable peer to peer use of private electric car charging stations.
The device and app will track the charging station's usage enabling the owner to generate revenue off their station.

Is it based on a previous project?
No, the project appears to be a new project that does not build off a past project.

Is there a similar type of project already in existence?


What is the scope of the project? 
The scope will be mainly to implment the map, listing, sheduling and charger unlock features of the app.
The sponser does not that while billing will be implement is currently out of the scope of the project.

What are the goals of the project?
The development of an mobile app that enables the charger owners to list their electric car chargers on the app
and for users to find those chargers and be able to use them.

How many features are required to implement?
Sheduling system to allow the app user to specify when their charging station is availible for use.
A map that allow the app user to see all nearby availible charging stations in a radius

Is it a more front end based project or backend?


What kind of hardware/software is required if any?
The application is intended to be used with an ESP32 MCU

Are there any foreseeable issues developing the project?


----------------------------------------------------------

EV Charging
Description:
This is a peer to peer auction platform, similar to Airbnb, for charging stations. Where
users would be able to use a mobile app, or web application, to look for charging
stations, view prices, view available times, and then book a charging station to
charge their EV. The purpose is to make EV charging more accessible with the
emergence of EV vehicles by allowing anyone to share energy and generate
revenue.

Goals:
● ** Implementing a smart charger that uses a microcontroller for interacting
with lock, case, and energy metering technologies.
● ** Searching charging stations with filters (time, location, type of charger etc)
● ** Setting auction prices (time of day, location, desired profit)
● User interface and backend to utilize pre-existing components as much as
possible to reduce development time.
● Application should allow users that can add/delete charging stations
● Application should allow users to search, scan qr codes on locks, and book a
charging station
** Innovation should be focused on these features

Notes:
Large scope, though only focusing on a single station prototype for this project
Uses hardware
Backend heavy

Languages:
Front end javascript/html/reactjs
python for controller

Hardware:
Espressif ESP32 microcontroller

Software:

MQTT (messaging protocol)
● Microcontroller can interact with cloud server

Backend
● Serverless cloud framework
● Terraform cloud
● API gateway for web app
● Relational Database for charging stations, users, records etc.
● Mapping API (for displaying searches)
● Billing

Front-end
● HTTP requests to api gateway
● Add chargers, delete chargers, view chargers, billing for charging stations
● Create account

Testing
● Ideally 100% Unit testing if possible
